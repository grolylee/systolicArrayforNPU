$date
   Sun Sep 14 12:31:05 2025
$end

$version
  2024.2.0
  $dumpfile ("/home/hieuld/Documents/datn_SA/final/softmax32Elements/waveform.vcd") 
$end

$timescale
  1ps
$end

$scope module tb_softmax32Elements $end
$var reg 1 ! i_clk $end
$var reg 1 " i_rst $end
$var reg 1 # i_start $end
$var reg 1 $ o_done $end
$var reg 5 % tb_rd_addr [4:0] $end
$var reg 16 & tb_rd_data [15:0] $end
$var reg 32 ' tb_cycle_cnt [31:0] $end
$scope module dut $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 * i_start $end
$var reg 1 + o_validResult $end
$var reg 1 $ o_done $end
$var wire 5 , i_probe_addr [4:0] $end
$var reg 16 - o_probe_doutb [15:0] $end
$var reg 1 . bramDone $end
$var reg 1 / wr_en $end
$var reg 5 0 wr_addr [4:0] $end
$var reg 16 1 wr_data [15:0] $end
$var reg 1 2 flatten_done $end
$scope module u_Bram $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 * i_start $end
$var reg 1 . o_done $end
$var reg 5 3 bram_addr [4:0] $end
$var reg 16 4 bram_dataA [15:0] $end
$scope module u_bram $end
$var wire 1 ( clka $end
$var wire 1 5 ena $end
$var wire 1 6 wea [0:0] $end
$var wire 5 7 addra [4:0] $end
$var wire 16 8 dina [15:0] $end
$var wire 16 9 douta [15:0] $end
$scope module inst $end
$var wire 1 ( clka $end
$var wire 1 : rsta $end
$var wire 1 5 ena $end
$var wire 1 ; regcea $end
$var wire 1 6 wea [0:0] $end
$var wire 5 7 addra [4:0] $end
$var wire 16 8 dina [15:0] $end
$var wire 16 9 douta [15:0] $end
$var wire 1 < clkb $end
$var wire 1 = rstb $end
$var wire 1 > enb $end
$var wire 1 ? regceb $end
$var wire 1 @ web [0:0] $end
$var wire 5 A addrb [4:0] $end
$var wire 16 B dinb [15:0] $end
$var wire 16 C doutb [15:0] $end
$var wire 1 D injectsbiterr $end
$var wire 1 E injectdbiterr $end
$var wire 1 F sbiterr $end
$var wire 1 G dbiterr $end
$var wire 5 H rdaddrecc [4:0] $end
$var wire 1 I eccpipece $end
$var wire 1 J sleep $end
$var wire 1 K deepsleep $end
$var wire 1 L shutdown $end
$var wire 1 M rsta_busy $end
$var wire 1 N rstb_busy $end
$var wire 1 O s_aclk $end
$var wire 1 P s_aresetn $end
$var wire 4 Q s_axi_awid [3:0] $end
$var wire 32 R s_axi_awaddr [31:0] $end
$var wire 8 S s_axi_awlen [7:0] $end
$var wire 3 T s_axi_awsize [2:0] $end
$var wire 2 U s_axi_awburst [1:0] $end
$var wire 1 V s_axi_awvalid $end
$var wire 1 W s_axi_awready $end
$var wire 16 X s_axi_wdata [15:0] $end
$var wire 1 Y s_axi_wstrb [0:0] $end
$var wire 1 Z s_axi_wlast $end
$var wire 1 [ s_axi_wvalid $end
$var wire 1 \ s_axi_wready $end
$var wire 4 ] s_axi_bid [3:0] $end
$var wire 2 ^ s_axi_bresp [1:0] $end
$var wire 1 _ s_axi_bvalid $end
$var wire 1 ` s_axi_bready $end
$var wire 4 a s_axi_arid [3:0] $end
$var wire 32 b s_axi_araddr [31:0] $end
$var wire 8 c s_axi_arlen [7:0] $end
$var wire 3 d s_axi_arsize [2:0] $end
$var wire 2 e s_axi_arburst [1:0] $end
$var wire 1 f s_axi_arvalid $end
$var wire 1 g s_axi_arready $end
$var wire 4 h s_axi_rid [3:0] $end
$var wire 16 i s_axi_rdata [15:0] $end
$var wire 2 j s_axi_rresp [1:0] $end
$var wire 1 k s_axi_rlast $end
$var wire 1 l s_axi_rvalid $end
$var wire 1 m s_axi_rready $end
$var wire 1 n s_axi_injectsbiterr $end
$var wire 1 o s_axi_injectdbiterr $end
$var wire 1 p s_axi_sbiterr $end
$var wire 1 q s_axi_dbiterr $end
$var wire 5 r s_axi_rdaddrecc [4:0] $end
$var wire 1 s SBITERR $end
$var wire 1 t DBITERR $end
$var wire 1 u S_AXI_AWREADY $end
$var wire 1 v S_AXI_WREADY $end
$var wire 1 w S_AXI_BVALID $end
$var wire 1 x S_AXI_ARREADY $end
$var wire 1 y S_AXI_RLAST $end
$var wire 1 z S_AXI_RVALID $end
$var wire 1 { S_AXI_SBITERR $end
$var wire 1 | S_AXI_DBITERR $end
$var wire 1 } WEA [0:0] $end
$var wire 5 ~ ADDRA [4:0] $end
$var wire 16 !! DINA [15:0] $end
$var wire 16 "! DOUTA [15:0] $end
$var wire 1 #! WEB [0:0] $end
$var wire 5 $! ADDRB [4:0] $end
$var wire 16 %! DINB [15:0] $end
$var wire 16 &! DOUTB [15:0] $end
$var wire 5 '! RDADDRECC [4:0] $end
$var wire 4 (! S_AXI_AWID [3:0] $end
$var wire 32 )! S_AXI_AWADDR [31:0] $end
$var wire 8 *! S_AXI_AWLEN [7:0] $end
$var wire 3 +! S_AXI_AWSIZE [2:0] $end
$var wire 2 ,! S_AXI_AWBURST [1:0] $end
$var wire 16 -! S_AXI_WDATA [15:0] $end
$var wire 1 .! S_AXI_WSTRB [0:0] $end
$var wire 4 /! S_AXI_BID [3:0] $end
$var wire 2 0! S_AXI_BRESP [1:0] $end
$var wire 4 1! S_AXI_ARID [3:0] $end
$var wire 32 2! S_AXI_ARADDR [31:0] $end
$var wire 8 3! S_AXI_ARLEN [7:0] $end
$var wire 3 4! S_AXI_ARSIZE [2:0] $end
$var wire 2 5! S_AXI_ARBURST [1:0] $end
$var wire 4 6! S_AXI_RID [3:0] $end
$var wire 16 7! S_AXI_RDATA [15:0] $end
$var wire 2 8! S_AXI_RRESP [1:0] $end
$var wire 5 9! S_AXI_RDADDRECC [4:0] $end
$var wire 1 :! WEB_parameterized [0:0] $end
$var wire 1 ;! ECCPIPECE $end
$var wire 1 <! SLEEP $end
$var reg 1 =! RSTA_BUSY $end
$var reg 1 >! RSTB_BUSY $end
$var wire 1 ?! CLKA $end
$var wire 1 @! RSTA $end
$var wire 1 A! ENA $end
$var wire 1 B! REGCEA $end
$var wire 1 C! CLKB $end
$var wire 1 D! RSTB $end
$var wire 1 E! ENB $end
$var wire 1 F! REGCEB $end
$var wire 1 G! INJECTSBITERR $end
$var wire 1 H! INJECTDBITERR $end
$var wire 1 I! S_ACLK $end
$var wire 1 J! S_ARESETN $end
$var wire 1 K! S_AXI_AWVALID $end
$var wire 1 L! S_AXI_WLAST $end
$var wire 1 M! S_AXI_WVALID $end
$var wire 1 N! S_AXI_BREADY $end
$var wire 1 O! S_AXI_ARVALID $end
$var wire 1 P! S_AXI_RREADY $end
$var wire 1 Q! S_AXI_INJECTSBITERR $end
$var wire 1 R! S_AXI_INJECTDBITERR $end
$var reg 1 S! injectsbiterr_in $end
$var reg 1 T! injectdbiterr_in $end
$var reg 1 U! rsta_in $end
$var reg 1 V! ena_in $end
$var reg 1 W! regcea_in $end
$var reg 1 X! wea_in [0:0] $end
$var reg 5 Y! addra_in [4:0] $end
$var reg 16 Z! dina_in [15:0] $end
$var wire 5 [! s_axi_awaddr_out_c [4:0] $end
$var wire 5 \! s_axi_araddr_out_c [4:0] $end
$var wire 1 ]! s_axi_wr_en_c $end
$var wire 1 ^! s_axi_rd_en_c $end
$var wire 1 _! s_aresetn_a_c $end
$var wire 8 `! s_axi_arlen_c [7:0] $end
$var wire 4 a! s_axi_rid_c [3:0] $end
$var wire 16 b! s_axi_rdata_c [15:0] $end
$var wire 2 c! s_axi_rresp_c [1:0] $end
$var wire 1 d! s_axi_rlast_c $end
$var wire 1 e! s_axi_rvalid_c $end
$var wire 1 f! s_axi_rready_c $end
$var wire 1 g! regceb_c $end
$var wire 7 h! s_axi_payload_c [6:0] $end
$var wire 7 i! m_axi_payload_c [6:0] $end
$var reg 5 j! RSTA_SHFT_REG [4:0] $end
$var reg 1 k! POR_A $end
$var reg 5 l! RSTB_SHFT_REG [4:0] $end
$var reg 1 m! POR_B $end
$var reg 1 n! ENA_dly $end
$var reg 1 o! ENA_dly_D $end
$var reg 1 p! ENB_dly $end
$var reg 1 q! ENB_dly_D $end
$var wire 1 r! RSTA_I_SAFE $end
$var wire 1 s! RSTB_I_SAFE $end
$var wire 1 t! ENA_I_SAFE $end
$var wire 1 u! ENB_I_SAFE $end
$var reg 1 v! ram_rstram_a_busy $end
$var reg 1 w! ram_rstreg_a_busy $end
$var reg 1 x! ram_rstram_b_busy $end
$var reg 1 y! ram_rstreg_b_busy $end
$var reg 1 z! ENA_dly_reg $end
$var reg 1 {! ENB_dly_reg $end
$var reg 1 |! ENA_dly_reg_D $end
$var reg 1 }! ENB_dly_reg_D $end
$scope module native_mem_module.blk_mem_gen_v8_4_9_inst $end
$var wire 1 ?! CLKA $end
$var wire 1 r! RSTA $end
$var wire 1 t! ENA $end
$var wire 1 ~! REGCEA $end
$var wire 1 !" WEA [0:0] $end
$var wire 5 "" ADDRA [4:0] $end
$var wire 16 #" DINA [15:0] $end
$var wire 16 "! DOUTA [15:0] $end
$var wire 1 C! CLKB $end
$var wire 1 s! RSTB $end
$var wire 1 u! ENB $end
$var wire 1 F! REGCEB $end
$var wire 1 #! WEB [0:0] $end
$var wire 5 $! ADDRB [4:0] $end
$var wire 16 %! DINB [15:0] $end
$var wire 16 &! DOUTB [15:0] $end
$var wire 1 $" INJECTSBITERR $end
$var wire 1 %" INJECTDBITERR $end
$var wire 1 ;! ECCPIPECE $end
$var wire 1 <! SLEEP $end
$var wire 1 s SBITERR $end
$var wire 1 t DBITERR $end
$var wire 5 '! RDADDRECC [4:0] $end
$var reg 22 &" doublebit_error [21:0] $end
$var reg 16 '" memory_out_a [15:0] $end
$var reg 16 (" memory_out_b [15:0] $end
$var reg 1 )" sbiterr_in $end
$var wire 1 *" sbiterr_sdp $end
$var reg 1 +" dbiterr_in $end
$var wire 1 ," dbiterr_sdp $end
$var wire 16 -" dout_i [15:0] $end
$var wire 1 ." dbiterr_i $end
$var wire 1 /" sbiterr_i $end
$var wire 5 0" rdaddrecc_i [4:0] $end
$var reg 5 1" rdaddrecc_in [4:0] $end
$var wire 5 2" rdaddrecc_sdp [4:0] $end
$var reg 16 3" inita_val [15:0] $end
$var reg 16 4" initb_val [15:0] $end
$var reg 1 5" is_collision $end
$var reg 1 6" is_collision_a $end
$var reg 1 7" is_collision_delay_a $end
$var reg 1 8" is_collision_b $end
$var reg 1 9" is_collision_delay_b $end
$var integer 32 :" status [31:0] $end
$var integer 32 ;" initfile [31:0] $end
$var integer 32 <" meminitfile [31:0] $end
$var reg 16 =" mif_data [15:0] $end
$var reg 16 >" mem_data [15:0] $end
$var reg 128 ?" inita_str [127:0] $end
$var reg 128 @" initb_str [127:0] $end
$var reg 128 A" default_data_str [127:0] $end
$var reg 8184 B" init_file_str [8183:0] $end
$var reg 8184 C" mem_init_file_str [8183:0] $end
$var integer 32 D" cnt [31:0] $end
$var integer 32 E" write_addr_a_width [31:0] $end
$var integer 32 F" read_addr_a_width [31:0] $end
$var integer 32 G" write_addr_b_width [31:0] $end
$var integer 32 H" read_addr_b_width [31:0] $end
$var wire 1 I" ena_i $end
$var wire 1 J" enb_i $end
$var wire 1 K" reseta_i $end
$var wire 1 L" resetb_i $end
$var wire 1 M" wea_i [0:0] $end
$var wire 1 N" web_i [0:0] $end
$var wire 1 O" rea_i $end
$var wire 1 P" reb_i $end
$var wire 1 Q" rsta_outp_stage $end
$var wire 1 R" rstb_outp_stage $end
$var wire 5 S" \async_coll.addra_delay  [4:0] $end
$var wire 1 T" \async_coll.wea_delay  [0:0] $end
$var wire 1 U" \async_coll.ena_delay  $end
$var wire 5 V" \async_coll.addrb_delay  [4:0] $end
$var wire 1 W" \async_coll.web_delay  [0:0] $end
$var wire 1 X" \async_coll.enb_delay  $end
$scope module reg_a $end
$var wire 1 ?! CLK $end
$var wire 1 Q" RST $end
$var wire 1 t! EN $end
$var wire 1 ~! REGCE $end
$var wire 16 Y" DIN_I [15:0] $end
$var reg 16 Z" DOUT [15:0] $end
$var wire 1 [" SBITERR_IN_I $end
$var wire 1 \" DBITERR_IN_I $end
$var reg 1 ]" SBITERR $end
$var reg 1 ^" DBITERR $end
$var wire 5 _" RDADDRECC_IN_I [4:0] $end
$var wire 1 `" ECCPIPECE $end
$var reg 5 a" RDADDRECC [4:0] $end
$var reg 16 b" out_regs [15:0] $end
$var reg 5 c" rdaddrecc_regs [4:0] $end
$var reg 1 d" sbiterr_regs [0:0] $end
$var reg 1 e" dbiterr_regs [0:0] $end
$var reg 128 f" init_str [127:0] $end
$var reg 16 g" init_val [15:0] $end
$var wire 1 h" en_i $end
$var wire 1 i" regce_i $end
$var wire 1 j" rst_i $end
$var reg 16 k" DIN [15:0] $end
$var reg 5 l" RDADDRECC_IN [4:0] $end
$var reg 1 m" SBITERR_IN $end
$var reg 1 n" DBITERR_IN $end
$upscope $end
$scope module reg_b $end
$var wire 1 C! CLK $end
$var wire 1 R" RST $end
$var wire 1 u! EN $end
$var wire 1 F! REGCE $end
$var wire 16 o" DIN_I [15:0] $end
$var reg 16 p" DOUT [15:0] $end
$var wire 1 q" SBITERR_IN_I $end
$var wire 1 r" DBITERR_IN_I $end
$var reg 1 s" SBITERR $end
$var reg 1 t" DBITERR $end
$var wire 5 u" RDADDRECC_IN_I [4:0] $end
$var wire 1 ;! ECCPIPECE $end
$var reg 5 v" RDADDRECC [4:0] $end
$var reg 16 w" out_regs [15:0] $end
$var reg 5 x" rdaddrecc_regs [4:0] $end
$var reg 1 y" sbiterr_regs [0:0] $end
$var reg 1 z" dbiterr_regs [0:0] $end
$var reg 128 {" init_str [127:0] $end
$var reg 16 |" init_val [15:0] $end
$var wire 1 }" en_i $end
$var wire 1 ~" regce_i $end
$var wire 1 !# rst_i $end
$var reg 16 "# DIN [15:0] $end
$var reg 5 ## RDADDRECC_IN [4:0] $end
$var reg 1 $# SBITERR_IN $end
$var reg 1 %# DBITERR_IN $end
$upscope $end
$scope module has_softecc_output_reg_stage $end
$var wire 1 C! CLK $end
$var wire 16 -" DIN [15:0] $end
$var reg 16 &# DOUT [15:0] $end
$var wire 1 /" SBITERR_IN $end
$var wire 1 ." DBITERR_IN $end
$var reg 1 '# SBITERR $end
$var reg 1 (# DBITERR $end
$var wire 5 0" RDADDRECC_IN [4:0] $end
$var reg 5 )# RDADDRECC [4:0] $end
$var reg 16 *# dout_i [15:0] $end
$var reg 1 +# sbiterr_i $end
$var reg 1 ,# dbiterr_i $end
$var reg 5 -# rdaddrecc_i [4:0] $end
$upscope $end
$scope task write_a $end
$var reg 5 .# addr [4:0] $end
$var reg 1 /# byte_en [0:0] $end
$var reg 16 0# data [15:0] $end
$var reg 1 1# inj_sbiterr $end
$var reg 1 2# inj_dbiterr $end
$var reg 16 3# current_contents [15:0] $end
$var reg 5 4# address [4:0] $end
$var integer 32 5# i [31:0] $end
$upscope $end
$scope task write_b $end
$var reg 5 6# addr [4:0] $end
$var reg 1 7# byte_en [0:0] $end
$var reg 16 8# data [15:0] $end
$var reg 16 9# current_contents [15:0] $end
$var reg 5 :# address [4:0] $end
$var integer 32 ;# i [31:0] $end
$upscope $end
$scope task read_a $end
$var reg 5 <# addr [4:0] $end
$var reg 1 =# reset $end
$var reg 5 ># address [4:0] $end
$var integer 32 ?# i [31:0] $end
$upscope $end
$scope task read_b $end
$var reg 5 @# addr [4:0] $end
$var reg 1 A# reset $end
$var reg 5 B# address [4:0] $end
$var integer 32 C# i [31:0] $end
$upscope $end
$scope task init_memory $end
$var integer 32 D# i [31:0] $end
$var integer 32 E# j [31:0] $end
$var integer 32 F# addr_step [31:0] $end
$var integer 32 G# status [31:0] $end
$var reg 16 H# default_data [15:0] $end
$upscope $end
$scope function log2roundup $end
$var integer 32 I# log2roundup [31:0] $end
$var integer 32 J# data_value [31:0] $end
$var integer 32 K# width [31:0] $end
$var integer 32 L# cnt [31:0] $end
$upscope $end
$scope function collision_check $end
$var integer 32 M# collision_check [31:0] $end
$var reg 5 N# addr_a [4:0] $end
$var integer 32 O# iswrite_a [31:0] $end
$var reg 5 P# addr_b [4:0] $end
$var integer 32 Q# iswrite_b [31:0] $end
$var reg 1 R# c_aw_bw $end
$var reg 1 S# c_aw_br $end
$var reg 1 T# c_ar_bw $end
$var integer 32 U# scaled_addra_to_waddrb_width [31:0] $end
$var integer 32 V# scaled_addrb_to_waddrb_width [31:0] $end
$var integer 32 W# scaled_addra_to_waddra_width [31:0] $end
$var integer 32 X# scaled_addrb_to_waddra_width [31:0] $end
$var integer 32 Y# scaled_addra_to_raddrb_width [31:0] $end
$var integer 32 Z# scaled_addrb_to_raddrb_width [31:0] $end
$var integer 32 [# scaled_addra_to_raddra_width [31:0] $end
$var integer 32 \# scaled_addrb_to_raddra_width [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_fsm $end
$var wire 1 ( clk $end
$var wire 1 ) rst $end
$var wire 1 * start $end
$var reg 5 3 bram_addr [4:0] $end
$var wire 16 ]# bram_dataA [15:0] $end
$var reg 1 . done $end
$var reg 2 ^# state $end
$var reg 2 _# next_state $end
$var reg 5 `# col_cnt [4:0] $end
$scope begin Block56_23 $end
$var reg 32 a# j [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_softmax32 $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 b# i_valid $end
$var reg 1 + o_valid $end
$var reg 16 c# valueMaxFinder [15:0] $end
$var reg 1 d# validMax $end
$var reg 1 e# validMax_d $end
$var reg 16 f# valueMaxFinder_d [15:0] $end
$var reg 16 g# valueMaxFinder_dd [15:0] $end
$var reg 1 h# validMax_dd $end
$var reg 1 i# validSub $end
$var reg 1 j# validSub_d $end
$var reg 1 k# validExpAll $end
$var reg 32 l# sumExp [31:0] $end
$var reg 1 m# validSum $end
$var reg 16 n# recipVal [15:0] $end
$var reg 1 o# validRecip $end
$var reg 1 p# o_validMult $end
$var reg 32 q# cycle_cnt [31:0] $end
$scope begin Block26_25 $end
$var reg 32 r# d [31:0] $end
$scope begin Block27_26 $end
$var reg 32 s# j [31:0] $end
$upscope $end
$upscope $end
$scope begin Block31_27 $end
$var reg 32 t# d [31:0] $end
$upscope $end
$scope module u_maxFinder $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 b# i_valid $end
$var reg 16 c# o_dataMax [15:0] $end
$var reg 1 d# o_valid $end
$var reg 6 u# valid_pipeline [5:0] $end
$scope begin Block18_29 $end
$var reg 32 v# i [31:0] $end
$upscope $end
$scope begin Block47_31 $end
$var reg 32 w# i [31:0] $end
$upscope $end
$scope begin Block47_33 $end
$var reg 32 x# i [31:0] $end
$upscope $end
$scope begin Block47_35 $end
$var reg 32 y# i [31:0] $end
$upscope $end
$scope begin Block47_37 $end
$var reg 32 z# i [31:0] $end
$upscope $end
$scope begin Block47_39 $end
$var reg 32 {# i [31:0] $end
$upscope $end
$upscope $end
$scope module u_sub $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 |# i_valid $end
$var wire 16 }# i_maxValue [15:0] $end
$var reg 1 i# o_valid $end
$var reg 16 ~# maxValueReg [15:0] $end
$var reg 1 !$ validReg $end
$scope begin Block23_43 $end
$var reg 32 "$ i [31:0] $end
$upscope $end
$scope begin Block31_44 $end
$var reg 32 #$ i [31:0] $end
$upscope $end
$scope begin Block38_45 $end
$var reg 32 $$ i [31:0] $end
$upscope $end
$scope begin Block48_47 $end
$var reg 32 %$ i [31:0] $end
$upscope $end
$upscope $end
$scope begin Block131_49 $end
$var reg 32 &$ i [31:0] $end
$upscope $end
$scope module u_expVec $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var reg 1 k# o_valid $end
$var reg 1 ($ all_valid $end
$scope module GEN_EXP[0].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 )$ i_data [511:496] $end
$var reg 16 *$ o_exp [511:496] $end
$var reg 1 +$ o_valid $end
$var reg 16 ,$ dataReg [15:0] $end
$var reg 16 -$ deltaFixed [15:0] $end
$var reg 6 .$ index [5:0] $end
$var reg 1 /$ validReg1 $end
$var reg 1 0$ validReg2 $end
$var reg 1 1$ validReg3 $end
$var reg 18 2$ index_comb [17:0] $end
$var reg 18 3$ x0_comb [17:0] $end
$var reg 16 4$ delta_fixed_comb [15:0] $end
$var reg 16 5$ expBaseReg [15:0] $end
$var reg 16 6$ slopeReg [15:0] $end
$var reg 16 7$ deltaFixedReg [15:0] $end
$var reg 32 8$ product [31:0] $end
$var reg 16 9$ o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 :$ temp_product [31:0] $end
$var reg 16 ;$ temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[1].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 <$ i_data [495:480] $end
$var reg 16 =$ o_exp [495:480] $end
$var reg 1 >$ o_valid $end
$var reg 16 ?$ dataReg [15:0] $end
$var reg 16 @$ deltaFixed [15:0] $end
$var reg 6 A$ index [5:0] $end
$var reg 1 B$ validReg1 $end
$var reg 1 C$ validReg2 $end
$var reg 1 D$ validReg3 $end
$var reg 18 E$ index_comb [17:0] $end
$var reg 18 F$ x0_comb [17:0] $end
$var reg 16 G$ delta_fixed_comb [15:0] $end
$var reg 16 H$ expBaseReg [15:0] $end
$var reg 16 I$ slopeReg [15:0] $end
$var reg 16 J$ deltaFixedReg [15:0] $end
$var reg 32 K$ product [31:0] $end
$var reg 16 L$ o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 M$ temp_product [31:0] $end
$var reg 16 N$ temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[2].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 O$ i_data [479:464] $end
$var reg 16 P$ o_exp [479:464] $end
$var reg 1 Q$ o_valid $end
$var reg 16 R$ dataReg [15:0] $end
$var reg 16 S$ deltaFixed [15:0] $end
$var reg 6 T$ index [5:0] $end
$var reg 1 U$ validReg1 $end
$var reg 1 V$ validReg2 $end
$var reg 1 W$ validReg3 $end
$var reg 18 X$ index_comb [17:0] $end
$var reg 18 Y$ x0_comb [17:0] $end
$var reg 16 Z$ delta_fixed_comb [15:0] $end
$var reg 16 [$ expBaseReg [15:0] $end
$var reg 16 \$ slopeReg [15:0] $end
$var reg 16 ]$ deltaFixedReg [15:0] $end
$var reg 32 ^$ product [31:0] $end
$var reg 16 _$ o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 `$ temp_product [31:0] $end
$var reg 16 a$ temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[3].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 b$ i_data [463:448] $end
$var reg 16 c$ o_exp [463:448] $end
$var reg 1 d$ o_valid $end
$var reg 16 e$ dataReg [15:0] $end
$var reg 16 f$ deltaFixed [15:0] $end
$var reg 6 g$ index [5:0] $end
$var reg 1 h$ validReg1 $end
$var reg 1 i$ validReg2 $end
$var reg 1 j$ validReg3 $end
$var reg 18 k$ index_comb [17:0] $end
$var reg 18 l$ x0_comb [17:0] $end
$var reg 16 m$ delta_fixed_comb [15:0] $end
$var reg 16 n$ expBaseReg [15:0] $end
$var reg 16 o$ slopeReg [15:0] $end
$var reg 16 p$ deltaFixedReg [15:0] $end
$var reg 32 q$ product [31:0] $end
$var reg 16 r$ o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 s$ temp_product [31:0] $end
$var reg 16 t$ temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[4].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 u$ i_data [447:432] $end
$var reg 16 v$ o_exp [447:432] $end
$var reg 1 w$ o_valid $end
$var reg 16 x$ dataReg [15:0] $end
$var reg 16 y$ deltaFixed [15:0] $end
$var reg 6 z$ index [5:0] $end
$var reg 1 {$ validReg1 $end
$var reg 1 |$ validReg2 $end
$var reg 1 }$ validReg3 $end
$var reg 18 ~$ index_comb [17:0] $end
$var reg 18 !% x0_comb [17:0] $end
$var reg 16 "% delta_fixed_comb [15:0] $end
$var reg 16 #% expBaseReg [15:0] $end
$var reg 16 $% slopeReg [15:0] $end
$var reg 16 %% deltaFixedReg [15:0] $end
$var reg 32 &% product [31:0] $end
$var reg 16 '% o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 (% temp_product [31:0] $end
$var reg 16 )% temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[5].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 *% i_data [431:416] $end
$var reg 16 +% o_exp [431:416] $end
$var reg 1 ,% o_valid $end
$var reg 16 -% dataReg [15:0] $end
$var reg 16 .% deltaFixed [15:0] $end
$var reg 6 /% index [5:0] $end
$var reg 1 0% validReg1 $end
$var reg 1 1% validReg2 $end
$var reg 1 2% validReg3 $end
$var reg 18 3% index_comb [17:0] $end
$var reg 18 4% x0_comb [17:0] $end
$var reg 16 5% delta_fixed_comb [15:0] $end
$var reg 16 6% expBaseReg [15:0] $end
$var reg 16 7% slopeReg [15:0] $end
$var reg 16 8% deltaFixedReg [15:0] $end
$var reg 32 9% product [31:0] $end
$var reg 16 :% o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 ;% temp_product [31:0] $end
$var reg 16 <% temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[6].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 =% i_data [415:400] $end
$var reg 16 >% o_exp [415:400] $end
$var reg 1 ?% o_valid $end
$var reg 16 @% dataReg [15:0] $end
$var reg 16 A% deltaFixed [15:0] $end
$var reg 6 B% index [5:0] $end
$var reg 1 C% validReg1 $end
$var reg 1 D% validReg2 $end
$var reg 1 E% validReg3 $end
$var reg 18 F% index_comb [17:0] $end
$var reg 18 G% x0_comb [17:0] $end
$var reg 16 H% delta_fixed_comb [15:0] $end
$var reg 16 I% expBaseReg [15:0] $end
$var reg 16 J% slopeReg [15:0] $end
$var reg 16 K% deltaFixedReg [15:0] $end
$var reg 32 L% product [31:0] $end
$var reg 16 M% o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 N% temp_product [31:0] $end
$var reg 16 O% temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[7].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 P% i_data [399:384] $end
$var reg 16 Q% o_exp [399:384] $end
$var reg 1 R% o_valid $end
$var reg 16 S% dataReg [15:0] $end
$var reg 16 T% deltaFixed [15:0] $end
$var reg 6 U% index [5:0] $end
$var reg 1 V% validReg1 $end
$var reg 1 W% validReg2 $end
$var reg 1 X% validReg3 $end
$var reg 18 Y% index_comb [17:0] $end
$var reg 18 Z% x0_comb [17:0] $end
$var reg 16 [% delta_fixed_comb [15:0] $end
$var reg 16 \% expBaseReg [15:0] $end
$var reg 16 ]% slopeReg [15:0] $end
$var reg 16 ^% deltaFixedReg [15:0] $end
$var reg 32 _% product [31:0] $end
$var reg 16 `% o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 a% temp_product [31:0] $end
$var reg 16 b% temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[8].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 c% i_data [383:368] $end
$var reg 16 d% o_exp [383:368] $end
$var reg 1 e% o_valid $end
$var reg 16 f% dataReg [15:0] $end
$var reg 16 g% deltaFixed [15:0] $end
$var reg 6 h% index [5:0] $end
$var reg 1 i% validReg1 $end
$var reg 1 j% validReg2 $end
$var reg 1 k% validReg3 $end
$var reg 18 l% index_comb [17:0] $end
$var reg 18 m% x0_comb [17:0] $end
$var reg 16 n% delta_fixed_comb [15:0] $end
$var reg 16 o% expBaseReg [15:0] $end
$var reg 16 p% slopeReg [15:0] $end
$var reg 16 q% deltaFixedReg [15:0] $end
$var reg 32 r% product [31:0] $end
$var reg 16 s% o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 t% temp_product [31:0] $end
$var reg 16 u% temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[9].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 v% i_data [367:352] $end
$var reg 16 w% o_exp [367:352] $end
$var reg 1 x% o_valid $end
$var reg 16 y% dataReg [15:0] $end
$var reg 16 z% deltaFixed [15:0] $end
$var reg 6 {% index [5:0] $end
$var reg 1 |% validReg1 $end
$var reg 1 }% validReg2 $end
$var reg 1 ~% validReg3 $end
$var reg 18 !& index_comb [17:0] $end
$var reg 18 "& x0_comb [17:0] $end
$var reg 16 #& delta_fixed_comb [15:0] $end
$var reg 16 $& expBaseReg [15:0] $end
$var reg 16 %& slopeReg [15:0] $end
$var reg 16 && deltaFixedReg [15:0] $end
$var reg 32 '& product [31:0] $end
$var reg 16 (& o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 )& temp_product [31:0] $end
$var reg 16 *& temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[10].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 +& i_data [351:336] $end
$var reg 16 ,& o_exp [351:336] $end
$var reg 1 -& o_valid $end
$var reg 16 .& dataReg [15:0] $end
$var reg 16 /& deltaFixed [15:0] $end
$var reg 6 0& index [5:0] $end
$var reg 1 1& validReg1 $end
$var reg 1 2& validReg2 $end
$var reg 1 3& validReg3 $end
$var reg 18 4& index_comb [17:0] $end
$var reg 18 5& x0_comb [17:0] $end
$var reg 16 6& delta_fixed_comb [15:0] $end
$var reg 16 7& expBaseReg [15:0] $end
$var reg 16 8& slopeReg [15:0] $end
$var reg 16 9& deltaFixedReg [15:0] $end
$var reg 32 :& product [31:0] $end
$var reg 16 ;& o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 <& temp_product [31:0] $end
$var reg 16 =& temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[11].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 >& i_data [335:320] $end
$var reg 16 ?& o_exp [335:320] $end
$var reg 1 @& o_valid $end
$var reg 16 A& dataReg [15:0] $end
$var reg 16 B& deltaFixed [15:0] $end
$var reg 6 C& index [5:0] $end
$var reg 1 D& validReg1 $end
$var reg 1 E& validReg2 $end
$var reg 1 F& validReg3 $end
$var reg 18 G& index_comb [17:0] $end
$var reg 18 H& x0_comb [17:0] $end
$var reg 16 I& delta_fixed_comb [15:0] $end
$var reg 16 J& expBaseReg [15:0] $end
$var reg 16 K& slopeReg [15:0] $end
$var reg 16 L& deltaFixedReg [15:0] $end
$var reg 32 M& product [31:0] $end
$var reg 16 N& o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 O& temp_product [31:0] $end
$var reg 16 P& temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[12].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 Q& i_data [319:304] $end
$var reg 16 R& o_exp [319:304] $end
$var reg 1 S& o_valid $end
$var reg 16 T& dataReg [15:0] $end
$var reg 16 U& deltaFixed [15:0] $end
$var reg 6 V& index [5:0] $end
$var reg 1 W& validReg1 $end
$var reg 1 X& validReg2 $end
$var reg 1 Y& validReg3 $end
$var reg 18 Z& index_comb [17:0] $end
$var reg 18 [& x0_comb [17:0] $end
$var reg 16 \& delta_fixed_comb [15:0] $end
$var reg 16 ]& expBaseReg [15:0] $end
$var reg 16 ^& slopeReg [15:0] $end
$var reg 16 _& deltaFixedReg [15:0] $end
$var reg 32 `& product [31:0] $end
$var reg 16 a& o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 b& temp_product [31:0] $end
$var reg 16 c& temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[13].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 d& i_data [303:288] $end
$var reg 16 e& o_exp [303:288] $end
$var reg 1 f& o_valid $end
$var reg 16 g& dataReg [15:0] $end
$var reg 16 h& deltaFixed [15:0] $end
$var reg 6 i& index [5:0] $end
$var reg 1 j& validReg1 $end
$var reg 1 k& validReg2 $end
$var reg 1 l& validReg3 $end
$var reg 18 m& index_comb [17:0] $end
$var reg 18 n& x0_comb [17:0] $end
$var reg 16 o& delta_fixed_comb [15:0] $end
$var reg 16 p& expBaseReg [15:0] $end
$var reg 16 q& slopeReg [15:0] $end
$var reg 16 r& deltaFixedReg [15:0] $end
$var reg 32 s& product [31:0] $end
$var reg 16 t& o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 u& temp_product [31:0] $end
$var reg 16 v& temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[14].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 w& i_data [287:272] $end
$var reg 16 x& o_exp [287:272] $end
$var reg 1 y& o_valid $end
$var reg 16 z& dataReg [15:0] $end
$var reg 16 {& deltaFixed [15:0] $end
$var reg 6 |& index [5:0] $end
$var reg 1 }& validReg1 $end
$var reg 1 ~& validReg2 $end
$var reg 1 !' validReg3 $end
$var reg 18 "' index_comb [17:0] $end
$var reg 18 #' x0_comb [17:0] $end
$var reg 16 $' delta_fixed_comb [15:0] $end
$var reg 16 %' expBaseReg [15:0] $end
$var reg 16 &' slopeReg [15:0] $end
$var reg 16 '' deltaFixedReg [15:0] $end
$var reg 32 (' product [31:0] $end
$var reg 16 )' o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 *' temp_product [31:0] $end
$var reg 16 +' temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[15].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 ,' i_data [271:256] $end
$var reg 16 -' o_exp [271:256] $end
$var reg 1 .' o_valid $end
$var reg 16 /' dataReg [15:0] $end
$var reg 16 0' deltaFixed [15:0] $end
$var reg 6 1' index [5:0] $end
$var reg 1 2' validReg1 $end
$var reg 1 3' validReg2 $end
$var reg 1 4' validReg3 $end
$var reg 18 5' index_comb [17:0] $end
$var reg 18 6' x0_comb [17:0] $end
$var reg 16 7' delta_fixed_comb [15:0] $end
$var reg 16 8' expBaseReg [15:0] $end
$var reg 16 9' slopeReg [15:0] $end
$var reg 16 :' deltaFixedReg [15:0] $end
$var reg 32 ;' product [31:0] $end
$var reg 16 <' o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 =' temp_product [31:0] $end
$var reg 16 >' temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[16].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 ?' i_data [255:240] $end
$var reg 16 @' o_exp [255:240] $end
$var reg 1 A' o_valid $end
$var reg 16 B' dataReg [15:0] $end
$var reg 16 C' deltaFixed [15:0] $end
$var reg 6 D' index [5:0] $end
$var reg 1 E' validReg1 $end
$var reg 1 F' validReg2 $end
$var reg 1 G' validReg3 $end
$var reg 18 H' index_comb [17:0] $end
$var reg 18 I' x0_comb [17:0] $end
$var reg 16 J' delta_fixed_comb [15:0] $end
$var reg 16 K' expBaseReg [15:0] $end
$var reg 16 L' slopeReg [15:0] $end
$var reg 16 M' deltaFixedReg [15:0] $end
$var reg 32 N' product [31:0] $end
$var reg 16 O' o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 P' temp_product [31:0] $end
$var reg 16 Q' temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[17].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 R' i_data [239:224] $end
$var reg 16 S' o_exp [239:224] $end
$var reg 1 T' o_valid $end
$var reg 16 U' dataReg [15:0] $end
$var reg 16 V' deltaFixed [15:0] $end
$var reg 6 W' index [5:0] $end
$var reg 1 X' validReg1 $end
$var reg 1 Y' validReg2 $end
$var reg 1 Z' validReg3 $end
$var reg 18 [' index_comb [17:0] $end
$var reg 18 \' x0_comb [17:0] $end
$var reg 16 ]' delta_fixed_comb [15:0] $end
$var reg 16 ^' expBaseReg [15:0] $end
$var reg 16 _' slopeReg [15:0] $end
$var reg 16 `' deltaFixedReg [15:0] $end
$var reg 32 a' product [31:0] $end
$var reg 16 b' o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 c' temp_product [31:0] $end
$var reg 16 d' temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[18].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 e' i_data [223:208] $end
$var reg 16 f' o_exp [223:208] $end
$var reg 1 g' o_valid $end
$var reg 16 h' dataReg [15:0] $end
$var reg 16 i' deltaFixed [15:0] $end
$var reg 6 j' index [5:0] $end
$var reg 1 k' validReg1 $end
$var reg 1 l' validReg2 $end
$var reg 1 m' validReg3 $end
$var reg 18 n' index_comb [17:0] $end
$var reg 18 o' x0_comb [17:0] $end
$var reg 16 p' delta_fixed_comb [15:0] $end
$var reg 16 q' expBaseReg [15:0] $end
$var reg 16 r' slopeReg [15:0] $end
$var reg 16 s' deltaFixedReg [15:0] $end
$var reg 32 t' product [31:0] $end
$var reg 16 u' o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 v' temp_product [31:0] $end
$var reg 16 w' temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[19].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 x' i_data [207:192] $end
$var reg 16 y' o_exp [207:192] $end
$var reg 1 z' o_valid $end
$var reg 16 {' dataReg [15:0] $end
$var reg 16 |' deltaFixed [15:0] $end
$var reg 6 }' index [5:0] $end
$var reg 1 ~' validReg1 $end
$var reg 1 !( validReg2 $end
$var reg 1 "( validReg3 $end
$var reg 18 #( index_comb [17:0] $end
$var reg 18 $( x0_comb [17:0] $end
$var reg 16 %( delta_fixed_comb [15:0] $end
$var reg 16 &( expBaseReg [15:0] $end
$var reg 16 '( slopeReg [15:0] $end
$var reg 16 (( deltaFixedReg [15:0] $end
$var reg 32 )( product [31:0] $end
$var reg 16 *( o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 +( temp_product [31:0] $end
$var reg 16 ,( temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[20].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 -( i_data [191:176] $end
$var reg 16 .( o_exp [191:176] $end
$var reg 1 /( o_valid $end
$var reg 16 0( dataReg [15:0] $end
$var reg 16 1( deltaFixed [15:0] $end
$var reg 6 2( index [5:0] $end
$var reg 1 3( validReg1 $end
$var reg 1 4( validReg2 $end
$var reg 1 5( validReg3 $end
$var reg 18 6( index_comb [17:0] $end
$var reg 18 7( x0_comb [17:0] $end
$var reg 16 8( delta_fixed_comb [15:0] $end
$var reg 16 9( expBaseReg [15:0] $end
$var reg 16 :( slopeReg [15:0] $end
$var reg 16 ;( deltaFixedReg [15:0] $end
$var reg 32 <( product [31:0] $end
$var reg 16 =( o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 >( temp_product [31:0] $end
$var reg 16 ?( temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[21].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 @( i_data [175:160] $end
$var reg 16 A( o_exp [175:160] $end
$var reg 1 B( o_valid $end
$var reg 16 C( dataReg [15:0] $end
$var reg 16 D( deltaFixed [15:0] $end
$var reg 6 E( index [5:0] $end
$var reg 1 F( validReg1 $end
$var reg 1 G( validReg2 $end
$var reg 1 H( validReg3 $end
$var reg 18 I( index_comb [17:0] $end
$var reg 18 J( x0_comb [17:0] $end
$var reg 16 K( delta_fixed_comb [15:0] $end
$var reg 16 L( expBaseReg [15:0] $end
$var reg 16 M( slopeReg [15:0] $end
$var reg 16 N( deltaFixedReg [15:0] $end
$var reg 32 O( product [31:0] $end
$var reg 16 P( o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 Q( temp_product [31:0] $end
$var reg 16 R( temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[22].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 S( i_data [159:144] $end
$var reg 16 T( o_exp [159:144] $end
$var reg 1 U( o_valid $end
$var reg 16 V( dataReg [15:0] $end
$var reg 16 W( deltaFixed [15:0] $end
$var reg 6 X( index [5:0] $end
$var reg 1 Y( validReg1 $end
$var reg 1 Z( validReg2 $end
$var reg 1 [( validReg3 $end
$var reg 18 \( index_comb [17:0] $end
$var reg 18 ]( x0_comb [17:0] $end
$var reg 16 ^( delta_fixed_comb [15:0] $end
$var reg 16 _( expBaseReg [15:0] $end
$var reg 16 `( slopeReg [15:0] $end
$var reg 16 a( deltaFixedReg [15:0] $end
$var reg 32 b( product [31:0] $end
$var reg 16 c( o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 d( temp_product [31:0] $end
$var reg 16 e( temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[23].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 f( i_data [143:128] $end
$var reg 16 g( o_exp [143:128] $end
$var reg 1 h( o_valid $end
$var reg 16 i( dataReg [15:0] $end
$var reg 16 j( deltaFixed [15:0] $end
$var reg 6 k( index [5:0] $end
$var reg 1 l( validReg1 $end
$var reg 1 m( validReg2 $end
$var reg 1 n( validReg3 $end
$var reg 18 o( index_comb [17:0] $end
$var reg 18 p( x0_comb [17:0] $end
$var reg 16 q( delta_fixed_comb [15:0] $end
$var reg 16 r( expBaseReg [15:0] $end
$var reg 16 s( slopeReg [15:0] $end
$var reg 16 t( deltaFixedReg [15:0] $end
$var reg 32 u( product [31:0] $end
$var reg 16 v( o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 w( temp_product [31:0] $end
$var reg 16 x( temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[24].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 y( i_data [127:112] $end
$var reg 16 z( o_exp [127:112] $end
$var reg 1 {( o_valid $end
$var reg 16 |( dataReg [15:0] $end
$var reg 16 }( deltaFixed [15:0] $end
$var reg 6 ~( index [5:0] $end
$var reg 1 !) validReg1 $end
$var reg 1 ") validReg2 $end
$var reg 1 #) validReg3 $end
$var reg 18 $) index_comb [17:0] $end
$var reg 18 %) x0_comb [17:0] $end
$var reg 16 &) delta_fixed_comb [15:0] $end
$var reg 16 ') expBaseReg [15:0] $end
$var reg 16 () slopeReg [15:0] $end
$var reg 16 )) deltaFixedReg [15:0] $end
$var reg 32 *) product [31:0] $end
$var reg 16 +) o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 ,) temp_product [31:0] $end
$var reg 16 -) temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[25].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 .) i_data [111:96] $end
$var reg 16 /) o_exp [111:96] $end
$var reg 1 0) o_valid $end
$var reg 16 1) dataReg [15:0] $end
$var reg 16 2) deltaFixed [15:0] $end
$var reg 6 3) index [5:0] $end
$var reg 1 4) validReg1 $end
$var reg 1 5) validReg2 $end
$var reg 1 6) validReg3 $end
$var reg 18 7) index_comb [17:0] $end
$var reg 18 8) x0_comb [17:0] $end
$var reg 16 9) delta_fixed_comb [15:0] $end
$var reg 16 :) expBaseReg [15:0] $end
$var reg 16 ;) slopeReg [15:0] $end
$var reg 16 <) deltaFixedReg [15:0] $end
$var reg 32 =) product [31:0] $end
$var reg 16 >) o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 ?) temp_product [31:0] $end
$var reg 16 @) temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[26].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 A) i_data [95:80] $end
$var reg 16 B) o_exp [95:80] $end
$var reg 1 C) o_valid $end
$var reg 16 D) dataReg [15:0] $end
$var reg 16 E) deltaFixed [15:0] $end
$var reg 6 F) index [5:0] $end
$var reg 1 G) validReg1 $end
$var reg 1 H) validReg2 $end
$var reg 1 I) validReg3 $end
$var reg 18 J) index_comb [17:0] $end
$var reg 18 K) x0_comb [17:0] $end
$var reg 16 L) delta_fixed_comb [15:0] $end
$var reg 16 M) expBaseReg [15:0] $end
$var reg 16 N) slopeReg [15:0] $end
$var reg 16 O) deltaFixedReg [15:0] $end
$var reg 32 P) product [31:0] $end
$var reg 16 Q) o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 R) temp_product [31:0] $end
$var reg 16 S) temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[27].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 T) i_data [79:64] $end
$var reg 16 U) o_exp [79:64] $end
$var reg 1 V) o_valid $end
$var reg 16 W) dataReg [15:0] $end
$var reg 16 X) deltaFixed [15:0] $end
$var reg 6 Y) index [5:0] $end
$var reg 1 Z) validReg1 $end
$var reg 1 [) validReg2 $end
$var reg 1 \) validReg3 $end
$var reg 18 ]) index_comb [17:0] $end
$var reg 18 ^) x0_comb [17:0] $end
$var reg 16 _) delta_fixed_comb [15:0] $end
$var reg 16 `) expBaseReg [15:0] $end
$var reg 16 a) slopeReg [15:0] $end
$var reg 16 b) deltaFixedReg [15:0] $end
$var reg 32 c) product [31:0] $end
$var reg 16 d) o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 e) temp_product [31:0] $end
$var reg 16 f) temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[28].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 g) i_data [63:48] $end
$var reg 16 h) o_exp [63:48] $end
$var reg 1 i) o_valid $end
$var reg 16 j) dataReg [15:0] $end
$var reg 16 k) deltaFixed [15:0] $end
$var reg 6 l) index [5:0] $end
$var reg 1 m) validReg1 $end
$var reg 1 n) validReg2 $end
$var reg 1 o) validReg3 $end
$var reg 18 p) index_comb [17:0] $end
$var reg 18 q) x0_comb [17:0] $end
$var reg 16 r) delta_fixed_comb [15:0] $end
$var reg 16 s) expBaseReg [15:0] $end
$var reg 16 t) slopeReg [15:0] $end
$var reg 16 u) deltaFixedReg [15:0] $end
$var reg 32 v) product [31:0] $end
$var reg 16 w) o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 x) temp_product [31:0] $end
$var reg 16 y) temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[29].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 z) i_data [47:32] $end
$var reg 16 {) o_exp [47:32] $end
$var reg 1 |) o_valid $end
$var reg 16 }) dataReg [15:0] $end
$var reg 16 ~) deltaFixed [15:0] $end
$var reg 6 !* index [5:0] $end
$var reg 1 "* validReg1 $end
$var reg 1 #* validReg2 $end
$var reg 1 $* validReg3 $end
$var reg 18 %* index_comb [17:0] $end
$var reg 18 &* x0_comb [17:0] $end
$var reg 16 '* delta_fixed_comb [15:0] $end
$var reg 16 (* expBaseReg [15:0] $end
$var reg 16 )* slopeReg [15:0] $end
$var reg 16 ** deltaFixedReg [15:0] $end
$var reg 32 +* product [31:0] $end
$var reg 16 ,* o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 -* temp_product [31:0] $end
$var reg 16 .* temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[30].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 /* i_data [31:16] $end
$var reg 16 0* o_exp [31:16] $end
$var reg 1 1* o_valid $end
$var reg 16 2* dataReg [15:0] $end
$var reg 16 3* deltaFixed [15:0] $end
$var reg 6 4* index [5:0] $end
$var reg 1 5* validReg1 $end
$var reg 1 6* validReg2 $end
$var reg 1 7* validReg3 $end
$var reg 18 8* index_comb [17:0] $end
$var reg 18 9* x0_comb [17:0] $end
$var reg 16 :* delta_fixed_comb [15:0] $end
$var reg 16 ;* expBaseReg [15:0] $end
$var reg 16 <* slopeReg [15:0] $end
$var reg 16 =* deltaFixedReg [15:0] $end
$var reg 32 >* product [31:0] $end
$var reg 16 ?* o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 @* temp_product [31:0] $end
$var reg 16 A* temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope module GEN_EXP[31].u_expcalc $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 '$ i_valid $end
$var wire 16 B* i_data [15:0] $end
$var reg 16 C* o_exp [15:0] $end
$var reg 1 D* o_valid $end
$var reg 16 E* dataReg [15:0] $end
$var reg 16 F* deltaFixed [15:0] $end
$var reg 6 G* index [5:0] $end
$var reg 1 H* validReg1 $end
$var reg 1 I* validReg2 $end
$var reg 1 J* validReg3 $end
$var reg 18 K* index_comb [17:0] $end
$var reg 18 L* x0_comb [17:0] $end
$var reg 16 M* delta_fixed_comb [15:0] $end
$var reg 16 N* expBaseReg [15:0] $end
$var reg 16 O* slopeReg [15:0] $end
$var reg 16 P* deltaFixedReg [15:0] $end
$var reg 32 Q* product [31:0] $end
$var reg 16 R* o_exp_comb [15:0] $end
$scope begin Block90_56 $end
$var reg 32 S* temp_product [31:0] $end
$var reg 16 T* temp_o_exp [15:0] $end
$upscope $end
$upscope $end
$scope begin Block50_245 $end
$var reg 32 U* i [31:0] $end
$upscope $end
$scope begin Block61_247 $end
$var reg 32 V* i [31:0] $end
$upscope $end
$upscope $end
$scope module u_sumFinder $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 W* i_valid $end
$var reg 32 l# o_sum [31:0] $end
$var reg 1 m# o_valid $end
$var reg 32 X* stage5 [31:0] $end
$var reg 1 Y* v1 $end
$var reg 1 Z* v2 $end
$var reg 1 [* v3 $end
$var reg 1 \* v4 $end
$var reg 1 ]* v5 $end
$scope begin Block68_249 $end
$var reg 32 ^* i [31:0] $end
$upscope $end
$scope begin Block86_251 $end
$var reg 32 _* i [31:0] $end
$upscope $end
$scope begin Block90_252 $end
$var reg 32 `* i [31:0] $end
$upscope $end
$scope begin Block97_254 $end
$var reg 32 a* i [31:0] $end
$upscope $end
$scope begin Block101_255 $end
$var reg 32 b* i [31:0] $end
$upscope $end
$scope begin Block108_257 $end
$var reg 32 c* i [31:0] $end
$upscope $end
$scope begin Block112_258 $end
$var reg 32 d* i [31:0] $end
$upscope $end
$scope begin Block119_260 $end
$var reg 32 e* i [31:0] $end
$upscope $end
$scope begin Block123_261 $end
$var reg 32 f* i [31:0] $end
$upscope $end
$upscope $end
$scope module u_recip $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 g* i_valid $end
$var wire 32 h* i_sum [31:0] $end
$var reg 16 n# o_reciprocal [15:0] $end
$var reg 1 o# o_valid $end
$var reg 8 i* lut_index [7:0] $end
$var reg 64 j* \gen_nr[1].ax_q6_42  [63:0] $end
$var reg 32 k* \gen_nr[1].corr_q4_28  [31:0] $end
$var reg 48 l* \gen_nr[1].xcorr_q4_44  [47:0] $end
$var reg 64 m* \gen_nr[2].ax_q6_42  [63:0] $end
$var reg 32 n* \gen_nr[2].corr_q4_28  [31:0] $end
$var reg 48 o* \gen_nr[2].xcorr_q4_44  [47:0] $end
$var reg 64 p* \gen_nr[3].ax_q6_42  [63:0] $end
$var reg 32 q* \gen_nr[3].corr_q4_28  [31:0] $end
$var reg 48 r* \gen_nr[3].xcorr_q4_44  [47:0] $end
$scope begin Block313_268 $end
$var reg 64 s* two_q6_42 [63:0] $end
$var reg 64 t* corr_q6_42 [63:0] $end
$upscope $end
$scope begin Block313_273 $end
$var reg 64 u* two_q6_42 [63:0] $end
$var reg 64 v* corr_q6_42 [63:0] $end
$upscope $end
$scope begin Block313_278 $end
$var reg 64 w* two_q6_42 [63:0] $end
$var reg 64 x* corr_q6_42 [63:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[0].u_mult $end
$var wire 1 y* i_valid $end
$var wire 16 z* i_dataA [15:0] $end
$var wire 16 {* i_dataB [15:0] $end
$var reg 16 |* o_data [15:0] $end
$var reg 1 }* o_valid $end
$var reg 32 ~* prod [31:0] $end
$var reg 16 !+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 "+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[1].u_mult $end
$var wire 1 #+ i_valid $end
$var wire 16 $+ i_dataA [15:0] $end
$var wire 16 %+ i_dataB [15:0] $end
$var reg 16 &+ o_data [31:16] $end
$var reg 1 '+ o_valid $end
$var reg 32 (+ prod [31:0] $end
$var reg 16 )+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 *+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[2].u_mult $end
$var wire 1 ++ i_valid $end
$var wire 16 ,+ i_dataA [15:0] $end
$var wire 16 -+ i_dataB [15:0] $end
$var reg 16 .+ o_data [47:32] $end
$var reg 1 /+ o_valid $end
$var reg 32 0+ prod [31:0] $end
$var reg 16 1+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 2+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[3].u_mult $end
$var wire 1 3+ i_valid $end
$var wire 16 4+ i_dataA [15:0] $end
$var wire 16 5+ i_dataB [15:0] $end
$var reg 16 6+ o_data [63:48] $end
$var reg 1 7+ o_valid $end
$var reg 32 8+ prod [31:0] $end
$var reg 16 9+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 :+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[4].u_mult $end
$var wire 1 ;+ i_valid $end
$var wire 16 <+ i_dataA [15:0] $end
$var wire 16 =+ i_dataB [15:0] $end
$var reg 16 >+ o_data [79:64] $end
$var reg 1 ?+ o_valid $end
$var reg 32 @+ prod [31:0] $end
$var reg 16 A+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 B+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[5].u_mult $end
$var wire 1 C+ i_valid $end
$var wire 16 D+ i_dataA [15:0] $end
$var wire 16 E+ i_dataB [15:0] $end
$var reg 16 F+ o_data [95:80] $end
$var reg 1 G+ o_valid $end
$var reg 32 H+ prod [31:0] $end
$var reg 16 I+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 J+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[6].u_mult $end
$var wire 1 K+ i_valid $end
$var wire 16 L+ i_dataA [15:0] $end
$var wire 16 M+ i_dataB [15:0] $end
$var reg 16 N+ o_data [111:96] $end
$var reg 1 O+ o_valid $end
$var reg 32 P+ prod [31:0] $end
$var reg 16 Q+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 R+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[7].u_mult $end
$var wire 1 S+ i_valid $end
$var wire 16 T+ i_dataA [15:0] $end
$var wire 16 U+ i_dataB [15:0] $end
$var reg 16 V+ o_data [127:112] $end
$var reg 1 W+ o_valid $end
$var reg 32 X+ prod [31:0] $end
$var reg 16 Y+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 Z+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[8].u_mult $end
$var wire 1 [+ i_valid $end
$var wire 16 \+ i_dataA [15:0] $end
$var wire 16 ]+ i_dataB [15:0] $end
$var reg 16 ^+ o_data [143:128] $end
$var reg 1 _+ o_valid $end
$var reg 32 `+ prod [31:0] $end
$var reg 16 a+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 b+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[9].u_mult $end
$var wire 1 c+ i_valid $end
$var wire 16 d+ i_dataA [15:0] $end
$var wire 16 e+ i_dataB [15:0] $end
$var reg 16 f+ o_data [159:144] $end
$var reg 1 g+ o_valid $end
$var reg 32 h+ prod [31:0] $end
$var reg 16 i+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 j+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[10].u_mult $end
$var wire 1 k+ i_valid $end
$var wire 16 l+ i_dataA [15:0] $end
$var wire 16 m+ i_dataB [15:0] $end
$var reg 16 n+ o_data [175:160] $end
$var reg 1 o+ o_valid $end
$var reg 32 p+ prod [31:0] $end
$var reg 16 q+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 r+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[11].u_mult $end
$var wire 1 s+ i_valid $end
$var wire 16 t+ i_dataA [15:0] $end
$var wire 16 u+ i_dataB [15:0] $end
$var reg 16 v+ o_data [191:176] $end
$var reg 1 w+ o_valid $end
$var reg 32 x+ prod [31:0] $end
$var reg 16 y+ result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 z+ i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[12].u_mult $end
$var wire 1 {+ i_valid $end
$var wire 16 |+ i_dataA [15:0] $end
$var wire 16 }+ i_dataB [15:0] $end
$var reg 16 ~+ o_data [207:192] $end
$var reg 1 !, o_valid $end
$var reg 32 ", prod [31:0] $end
$var reg 16 #, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 $, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[13].u_mult $end
$var wire 1 %, i_valid $end
$var wire 16 &, i_dataA [15:0] $end
$var wire 16 ', i_dataB [15:0] $end
$var reg 16 (, o_data [223:208] $end
$var reg 1 ), o_valid $end
$var reg 32 *, prod [31:0] $end
$var reg 16 +, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 ,, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[14].u_mult $end
$var wire 1 -, i_valid $end
$var wire 16 ., i_dataA [15:0] $end
$var wire 16 /, i_dataB [15:0] $end
$var reg 16 0, o_data [239:224] $end
$var reg 1 1, o_valid $end
$var reg 32 2, prod [31:0] $end
$var reg 16 3, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 4, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[15].u_mult $end
$var wire 1 5, i_valid $end
$var wire 16 6, i_dataA [15:0] $end
$var wire 16 7, i_dataB [15:0] $end
$var reg 16 8, o_data [255:240] $end
$var reg 1 9, o_valid $end
$var reg 32 :, prod [31:0] $end
$var reg 16 ;, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 <, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[16].u_mult $end
$var wire 1 =, i_valid $end
$var wire 16 >, i_dataA [15:0] $end
$var wire 16 ?, i_dataB [15:0] $end
$var reg 16 @, o_data [271:256] $end
$var reg 1 A, o_valid $end
$var reg 32 B, prod [31:0] $end
$var reg 16 C, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 D, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[17].u_mult $end
$var wire 1 E, i_valid $end
$var wire 16 F, i_dataA [15:0] $end
$var wire 16 G, i_dataB [15:0] $end
$var reg 16 H, o_data [287:272] $end
$var reg 1 I, o_valid $end
$var reg 32 J, prod [31:0] $end
$var reg 16 K, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 L, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[18].u_mult $end
$var wire 1 M, i_valid $end
$var wire 16 N, i_dataA [15:0] $end
$var wire 16 O, i_dataB [15:0] $end
$var reg 16 P, o_data [303:288] $end
$var reg 1 Q, o_valid $end
$var reg 32 R, prod [31:0] $end
$var reg 16 S, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 T, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[19].u_mult $end
$var wire 1 U, i_valid $end
$var wire 16 V, i_dataA [15:0] $end
$var wire 16 W, i_dataB [15:0] $end
$var reg 16 X, o_data [319:304] $end
$var reg 1 Y, o_valid $end
$var reg 32 Z, prod [31:0] $end
$var reg 16 [, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 \, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[20].u_mult $end
$var wire 1 ], i_valid $end
$var wire 16 ^, i_dataA [15:0] $end
$var wire 16 _, i_dataB [15:0] $end
$var reg 16 `, o_data [335:320] $end
$var reg 1 a, o_valid $end
$var reg 32 b, prod [31:0] $end
$var reg 16 c, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 d, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[21].u_mult $end
$var wire 1 e, i_valid $end
$var wire 16 f, i_dataA [15:0] $end
$var wire 16 g, i_dataB [15:0] $end
$var reg 16 h, o_data [351:336] $end
$var reg 1 i, o_valid $end
$var reg 32 j, prod [31:0] $end
$var reg 16 k, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 l, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[22].u_mult $end
$var wire 1 m, i_valid $end
$var wire 16 n, i_dataA [15:0] $end
$var wire 16 o, i_dataB [15:0] $end
$var reg 16 p, o_data [367:352] $end
$var reg 1 q, o_valid $end
$var reg 32 r, prod [31:0] $end
$var reg 16 s, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 t, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[23].u_mult $end
$var wire 1 u, i_valid $end
$var wire 16 v, i_dataA [15:0] $end
$var wire 16 w, i_dataB [15:0] $end
$var reg 16 x, o_data [383:368] $end
$var reg 1 y, o_valid $end
$var reg 32 z, prod [31:0] $end
$var reg 16 {, result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 |, i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[24].u_mult $end
$var wire 1 }, i_valid $end
$var wire 16 ~, i_dataA [15:0] $end
$var wire 16 !- i_dataB [15:0] $end
$var reg 16 "- o_data [399:384] $end
$var reg 1 #- o_valid $end
$var reg 32 $- prod [31:0] $end
$var reg 16 %- result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 &- i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[25].u_mult $end
$var wire 1 '- i_valid $end
$var wire 16 (- i_dataA [15:0] $end
$var wire 16 )- i_dataB [15:0] $end
$var reg 16 *- o_data [415:400] $end
$var reg 1 +- o_valid $end
$var reg 32 ,- prod [31:0] $end
$var reg 16 -- result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 .- i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[26].u_mult $end
$var wire 1 /- i_valid $end
$var wire 16 0- i_dataA [15:0] $end
$var wire 16 1- i_dataB [15:0] $end
$var reg 16 2- o_data [431:416] $end
$var reg 1 3- o_valid $end
$var reg 32 4- prod [31:0] $end
$var reg 16 5- result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 6- i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[27].u_mult $end
$var wire 1 7- i_valid $end
$var wire 16 8- i_dataA [15:0] $end
$var wire 16 9- i_dataB [15:0] $end
$var reg 16 :- o_data [447:432] $end
$var reg 1 ;- o_valid $end
$var reg 32 <- prod [31:0] $end
$var reg 16 =- result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 >- i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[28].u_mult $end
$var wire 1 ?- i_valid $end
$var wire 16 @- i_dataA [15:0] $end
$var wire 16 A- i_dataB [15:0] $end
$var reg 16 B- o_data [463:448] $end
$var reg 1 C- o_valid $end
$var reg 32 D- prod [31:0] $end
$var reg 16 E- result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 F- i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[29].u_mult $end
$var wire 1 G- i_valid $end
$var wire 16 H- i_dataA [15:0] $end
$var wire 16 I- i_dataB [15:0] $end
$var reg 16 J- o_data [479:464] $end
$var reg 1 K- o_valid $end
$var reg 32 L- prod [31:0] $end
$var reg 16 M- result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 N- i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[30].u_mult $end
$var wire 1 O- i_valid $end
$var wire 16 P- i_dataA [15:0] $end
$var wire 16 Q- i_dataB [15:0] $end
$var reg 16 R- o_data [495:480] $end
$var reg 1 S- o_valid $end
$var reg 32 T- prod [31:0] $end
$var reg 16 U- result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 V- i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope module gen_mult[31].u_mult $end
$var wire 1 W- i_valid $end
$var wire 16 X- i_dataA [15:0] $end
$var wire 16 Y- i_dataB [15:0] $end
$var reg 16 Z- o_data [511:496] $end
$var reg 1 [- o_valid $end
$var reg 32 \- prod [31:0] $end
$var reg 16 ]- result [15:0] $end
$scope begin Block65_282 $end
$var reg 16 ^- i_dataA_unsigned [15:0] $end
$upscope $end
$upscope $end
$scope begin Block270_315 $end
$var reg 32 _- i [31:0] $end
$upscope $end
$upscope $end
$scope module u_output_flatten $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst $end
$var wire 1 + i_valid $end
$var reg 1 2 o_done $end
$var reg 5 0 wr_addr [4:0] $end
$var reg 1 / wr_en $end
$var reg 16 1 wr_data [15:0] $end
$var reg 5 `- index [4:0] $end
$var reg 1 a- processing $end
$scope begin Block112_325 $end
$var reg 32 b- i [31:0] $end
$upscope $end
$upscope $end
$scope module u_bram_out $end
$var wire 1 ( clka $end
$var wire 1 c- ena $end
$var wire 1 d- wea [0:0] $end
$var wire 5 e- addra [4:0] $end
$var wire 16 f- dina [15:0] $end
$var wire 16 g- douta [15:0] $end
$var wire 1 ( clkb $end
$var wire 1 h- enb $end
$var wire 1 i- web [0:0] $end
$var wire 5 , addrb [4:0] $end
$var wire 16 j- dinb [15:0] $end
$var wire 16 k- doutb [15:0] $end
$scope module inst $end
$var wire 1 ( clka $end
$var wire 1 l- rsta $end
$var wire 1 c- ena $end
$var wire 1 m- regcea $end
$var wire 1 d- wea [0:0] $end
$var wire 5 e- addra [4:0] $end
$var wire 16 f- dina [15:0] $end
$var wire 16 g- douta [15:0] $end
$var wire 1 ( clkb $end
$var wire 1 n- rstb $end
$var wire 1 h- enb $end
$var wire 1 o- regceb $end
$var wire 1 i- web [0:0] $end
$var wire 5 , addrb [4:0] $end
$var wire 16 j- dinb [15:0] $end
$var wire 16 k- doutb [15:0] $end
$var wire 1 p- injectsbiterr $end
$var wire 1 q- injectdbiterr $end
$var wire 1 r- sbiterr $end
$var wire 1 s- dbiterr $end
$var wire 5 t- rdaddrecc [4:0] $end
$var wire 1 u- eccpipece $end
$var wire 1 v- sleep $end
$var wire 1 w- deepsleep $end
$var wire 1 x- shutdown $end
$var wire 1 y- rsta_busy $end
$var wire 1 z- rstb_busy $end
$var wire 1 {- s_aclk $end
$var wire 1 |- s_aresetn $end
$var wire 4 }- s_axi_awid [3:0] $end
$var wire 32 ~- s_axi_awaddr [31:0] $end
$var wire 8 !. s_axi_awlen [7:0] $end
$var wire 3 ". s_axi_awsize [2:0] $end
$var wire 2 #. s_axi_awburst [1:0] $end
$var wire 1 $. s_axi_awvalid $end
$var wire 1 %. s_axi_awready $end
$var wire 16 &. s_axi_wdata [15:0] $end
$var wire 1 '. s_axi_wstrb [0:0] $end
$var wire 1 (. s_axi_wlast $end
$var wire 1 ). s_axi_wvalid $end
$var wire 1 *. s_axi_wready $end
$var wire 4 +. s_axi_bid [3:0] $end
$var wire 2 ,. s_axi_bresp [1:0] $end
$var wire 1 -. s_axi_bvalid $end
$var wire 1 .. s_axi_bready $end
$var wire 4 /. s_axi_arid [3:0] $end
$var wire 32 0. s_axi_araddr [31:0] $end
$var wire 8 1. s_axi_arlen [7:0] $end
$var wire 3 2. s_axi_arsize [2:0] $end
$var wire 2 3. s_axi_arburst [1:0] $end
$var wire 1 4. s_axi_arvalid $end
$var wire 1 5. s_axi_arready $end
$var wire 4 6. s_axi_rid [3:0] $end
$var wire 16 7. s_axi_rdata [15:0] $end
$var wire 2 8. s_axi_rresp [1:0] $end
$var wire 1 9. s_axi_rlast $end
$var wire 1 :. s_axi_rvalid $end
$var wire 1 ;. s_axi_rready $end
$var wire 1 <. s_axi_injectsbiterr $end
$var wire 1 =. s_axi_injectdbiterr $end
$var wire 1 >. s_axi_sbiterr $end
$var wire 1 ?. s_axi_dbiterr $end
$var wire 5 @. s_axi_rdaddrecc [4:0] $end
$var wire 1 A. SBITERR $end
$var wire 1 B. DBITERR $end
$var wire 1 C. S_AXI_AWREADY $end
$var wire 1 D. S_AXI_WREADY $end
$var wire 1 E. S_AXI_BVALID $end
$var wire 1 F. S_AXI_ARREADY $end
$var wire 1 G. S_AXI_RLAST $end
$var wire 1 H. S_AXI_RVALID $end
$var wire 1 I. S_AXI_SBITERR $end
$var wire 1 J. S_AXI_DBITERR $end
$var wire 1 K. WEA [0:0] $end
$var wire 5 L. ADDRA [4:0] $end
$var wire 16 M. DINA [15:0] $end
$var wire 16 N. DOUTA [15:0] $end
$var wire 1 O. WEB [0:0] $end
$var wire 5 P. ADDRB [4:0] $end
$var wire 16 Q. DINB [15:0] $end
$var wire 16 R. DOUTB [15:0] $end
$var wire 5 S. RDADDRECC [4:0] $end
$var wire 4 T. S_AXI_AWID [3:0] $end
$var wire 32 U. S_AXI_AWADDR [31:0] $end
$var wire 8 V. S_AXI_AWLEN [7:0] $end
$var wire 3 W. S_AXI_AWSIZE [2:0] $end
$var wire 2 X. S_AXI_AWBURST [1:0] $end
$var wire 16 Y. S_AXI_WDATA [15:0] $end
$var wire 1 Z. S_AXI_WSTRB [0:0] $end
$var wire 4 [. S_AXI_BID [3:0] $end
$var wire 2 \. S_AXI_BRESP [1:0] $end
$var wire 4 ]. S_AXI_ARID [3:0] $end
$var wire 32 ^. S_AXI_ARADDR [31:0] $end
$var wire 8 _. S_AXI_ARLEN [7:0] $end
$var wire 3 `. S_AXI_ARSIZE [2:0] $end
$var wire 2 a. S_AXI_ARBURST [1:0] $end
$var wire 4 b. S_AXI_RID [3:0] $end
$var wire 16 c. S_AXI_RDATA [15:0] $end
$var wire 2 d. S_AXI_RRESP [1:0] $end
$var wire 5 e. S_AXI_RDADDRECC [4:0] $end
$var wire 1 f. WEB_parameterized [0:0] $end
$var wire 1 g. ECCPIPECE $end
$var wire 1 h. SLEEP $end
$var reg 1 i. RSTA_BUSY $end
$var reg 1 j. RSTB_BUSY $end
$var wire 1 k. CLKA $end
$var wire 1 l. RSTA $end
$var wire 1 m. ENA $end
$var wire 1 n. REGCEA $end
$var wire 1 o. CLKB $end
$var wire 1 p. RSTB $end
$var wire 1 q. ENB $end
$var wire 1 r. REGCEB $end
$var wire 1 s. INJECTSBITERR $end
$var wire 1 t. INJECTDBITERR $end
$var wire 1 u. S_ACLK $end
$var wire 1 v. S_ARESETN $end
$var wire 1 w. S_AXI_AWVALID $end
$var wire 1 x. S_AXI_WLAST $end
$var wire 1 y. S_AXI_WVALID $end
$var wire 1 z. S_AXI_BREADY $end
$var wire 1 {. S_AXI_ARVALID $end
$var wire 1 |. S_AXI_RREADY $end
$var wire 1 }. S_AXI_INJECTSBITERR $end
$var wire 1 ~. S_AXI_INJECTDBITERR $end
$var reg 1 !/ injectsbiterr_in $end
$var reg 1 "/ injectdbiterr_in $end
$var reg 1 #/ rsta_in $end
$var reg 1 $/ ena_in $end
$var reg 1 %/ regcea_in $end
$var reg 1 &/ wea_in [0:0] $end
$var reg 5 '/ addra_in [4:0] $end
$var reg 16 (/ dina_in [15:0] $end
$var wire 5 )/ s_axi_awaddr_out_c [4:0] $end
$var wire 5 */ s_axi_araddr_out_c [4:0] $end
$var wire 1 +/ s_axi_wr_en_c $end
$var wire 1 ,/ s_axi_rd_en_c $end
$var wire 1 -/ s_aresetn_a_c $end
$var wire 8 ./ s_axi_arlen_c [7:0] $end
$var wire 4 // s_axi_rid_c [3:0] $end
$var wire 16 0/ s_axi_rdata_c [15:0] $end
$var wire 2 1/ s_axi_rresp_c [1:0] $end
$var wire 1 2/ s_axi_rlast_c $end
$var wire 1 3/ s_axi_rvalid_c $end
$var wire 1 4/ s_axi_rready_c $end
$var wire 1 5/ regceb_c $end
$var wire 7 6/ s_axi_payload_c [6:0] $end
$var wire 7 7/ m_axi_payload_c [6:0] $end
$var reg 5 8/ RSTA_SHFT_REG [4:0] $end
$var reg 1 9/ POR_A $end
$var reg 5 :/ RSTB_SHFT_REG [4:0] $end
$var reg 1 ;/ POR_B $end
$var reg 1 </ ENA_dly $end
$var reg 1 =/ ENA_dly_D $end
$var reg 1 >/ ENB_dly $end
$var reg 1 ?/ ENB_dly_D $end
$var wire 1 @/ RSTA_I_SAFE $end
$var wire 1 A/ RSTB_I_SAFE $end
$var wire 1 B/ ENA_I_SAFE $end
$var wire 1 C/ ENB_I_SAFE $end
$var reg 1 D/ ram_rstram_a_busy $end
$var reg 1 E/ ram_rstreg_a_busy $end
$var reg 1 F/ ram_rstram_b_busy $end
$var reg 1 G/ ram_rstreg_b_busy $end
$var reg 1 H/ ENA_dly_reg $end
$var reg 1 I/ ENB_dly_reg $end
$var reg 1 J/ ENA_dly_reg_D $end
$var reg 1 K/ ENB_dly_reg_D $end
$scope module native_mem_module.blk_mem_gen_v8_4_9_inst $end
$var wire 1 k. CLKA $end
$var wire 1 @/ RSTA $end
$var wire 1 B/ ENA $end
$var wire 1 L/ REGCEA $end
$var wire 1 M/ WEA [0:0] $end
$var wire 5 N/ ADDRA [4:0] $end
$var wire 16 O/ DINA [15:0] $end
$var wire 16 N. DOUTA [15:0] $end
$var wire 1 o. CLKB $end
$var wire 1 A/ RSTB $end
$var wire 1 C/ ENB $end
$var wire 1 r. REGCEB $end
$var wire 1 O. WEB [0:0] $end
$var wire 5 P. ADDRB [4:0] $end
$var wire 16 Q. DINB [15:0] $end
$var wire 16 R. DOUTB [15:0] $end
$var wire 1 P/ INJECTSBITERR $end
$var wire 1 Q/ INJECTDBITERR $end
$var wire 1 g. ECCPIPECE $end
$var wire 1 h. SLEEP $end
$var wire 1 A. SBITERR $end
$var wire 1 B. DBITERR $end
$var wire 5 S. RDADDRECC [4:0] $end
$var reg 22 R/ doublebit_error [21:0] $end
$var reg 16 S/ memory_out_a [15:0] $end
$var reg 16 T/ memory_out_b [15:0] $end
$var reg 1 U/ sbiterr_in $end
$var wire 1 V/ sbiterr_sdp $end
$var reg 1 W/ dbiterr_in $end
$var wire 1 X/ dbiterr_sdp $end
$var wire 16 Y/ dout_i [15:0] $end
$var wire 1 Z/ dbiterr_i $end
$var wire 1 [/ sbiterr_i $end
$var wire 5 \/ rdaddrecc_i [4:0] $end
$var reg 5 ]/ rdaddrecc_in [4:0] $end
$var wire 5 ^/ rdaddrecc_sdp [4:0] $end
$var reg 16 _/ inita_val [15:0] $end
$var reg 16 `/ initb_val [15:0] $end
$var reg 1 a/ is_collision $end
$var reg 1 b/ is_collision_a $end
$var reg 1 c/ is_collision_delay_a $end
$var reg 1 d/ is_collision_b $end
$var reg 1 e/ is_collision_delay_b $end
$var integer 32 f/ status [31:0] $end
$var integer 32 g/ initfile [31:0] $end
$var integer 32 h/ meminitfile [31:0] $end
$var reg 16 i/ mif_data [15:0] $end
$var reg 16 j/ mem_data [15:0] $end
$var reg 128 k/ inita_str [127:0] $end
$var reg 128 l/ initb_str [127:0] $end
$var reg 128 m/ default_data_str [127:0] $end
$var reg 8184 n/ init_file_str [8183:0] $end
$var reg 8184 o/ mem_init_file_str [8183:0] $end
$var integer 32 p/ cnt [31:0] $end
$var integer 32 q/ write_addr_a_width [31:0] $end
$var integer 32 r/ read_addr_a_width [31:0] $end
$var integer 32 s/ write_addr_b_width [31:0] $end
$var integer 32 t/ read_addr_b_width [31:0] $end
$var wire 1 u/ ena_i $end
$var wire 1 v/ enb_i $end
$var wire 1 w/ reseta_i $end
$var wire 1 x/ resetb_i $end
$var wire 1 y/ wea_i [0:0] $end
$var wire 1 z/ web_i [0:0] $end
$var wire 1 {/ rea_i $end
$var wire 1 |/ reb_i $end
$var wire 1 }/ rsta_outp_stage $end
$var wire 1 ~/ rstb_outp_stage $end
$var wire 5 !0 \async_coll.addra_delay  [4:0] $end
$var wire 1 "0 \async_coll.wea_delay  [0:0] $end
$var wire 1 #0 \async_coll.ena_delay  $end
$var wire 5 $0 \async_coll.addrb_delay  [4:0] $end
$var wire 1 %0 \async_coll.web_delay  [0:0] $end
$var wire 1 &0 \async_coll.enb_delay  $end
$scope module reg_a $end
$var wire 1 k. CLK $end
$var wire 1 }/ RST $end
$var wire 1 B/ EN $end
$var wire 1 L/ REGCE $end
$var wire 16 '0 DIN_I [15:0] $end
$var reg 16 (0 DOUT [15:0] $end
$var wire 1 )0 SBITERR_IN_I $end
$var wire 1 *0 DBITERR_IN_I $end
$var reg 1 +0 SBITERR $end
$var reg 1 ,0 DBITERR $end
$var wire 5 -0 RDADDRECC_IN_I [4:0] $end
$var wire 1 .0 ECCPIPECE $end
$var reg 5 /0 RDADDRECC [4:0] $end
$var reg 16 00 out_regs [15:0] $end
$var reg 5 10 rdaddrecc_regs [4:0] $end
$var reg 1 20 sbiterr_regs [0:0] $end
$var reg 1 30 dbiterr_regs [0:0] $end
$var reg 128 40 init_str [127:0] $end
$var reg 16 50 init_val [15:0] $end
$var wire 1 60 en_i $end
$var wire 1 70 regce_i $end
$var wire 1 80 rst_i $end
$var reg 16 90 DIN [15:0] $end
$var reg 5 :0 RDADDRECC_IN [4:0] $end
$var reg 1 ;0 SBITERR_IN $end
$var reg 1 <0 DBITERR_IN $end
$upscope $end
$scope module reg_b $end
$var wire 1 o. CLK $end
$var wire 1 ~/ RST $end
$var wire 1 C/ EN $end
$var wire 1 r. REGCE $end
$var wire 16 =0 DIN_I [15:0] $end
$var reg 16 >0 DOUT [15:0] $end
$var wire 1 ?0 SBITERR_IN_I $end
$var wire 1 @0 DBITERR_IN_I $end
$var reg 1 A0 SBITERR $end
$var reg 1 B0 DBITERR $end
$var wire 5 C0 RDADDRECC_IN_I [4:0] $end
$var wire 1 g. ECCPIPECE $end
$var reg 5 D0 RDADDRECC [4:0] $end
$var reg 16 E0 out_regs [15:0] $end
$var reg 5 F0 rdaddrecc_regs [4:0] $end
$var reg 1 G0 sbiterr_regs [0:0] $end
$var reg 1 H0 dbiterr_regs [0:0] $end
$var reg 128 I0 init_str [127:0] $end
$var reg 16 J0 init_val [15:0] $end
$var wire 1 K0 en_i $end
$var wire 1 L0 regce_i $end
$var wire 1 M0 rst_i $end
$var reg 16 N0 DIN [15:0] $end
$var reg 5 O0 RDADDRECC_IN [4:0] $end
$var reg 1 P0 SBITERR_IN $end
$var reg 1 Q0 DBITERR_IN $end
$upscope $end
$scope module has_softecc_output_reg_stage $end
$var wire 1 o. CLK $end
$var wire 16 Y/ DIN [15:0] $end
$var reg 16 R0 DOUT [15:0] $end
$var wire 1 [/ SBITERR_IN $end
$var wire 1 Z/ DBITERR_IN $end
$var reg 1 S0 SBITERR $end
$var reg 1 T0 DBITERR $end
$var wire 5 \/ RDADDRECC_IN [4:0] $end
$var reg 5 U0 RDADDRECC [4:0] $end
$var reg 16 V0 dout_i [15:0] $end
$var reg 1 W0 sbiterr_i $end
$var reg 1 X0 dbiterr_i $end
$var reg 5 Y0 rdaddrecc_i [4:0] $end
$upscope $end
$scope task write_a $end
$var reg 5 Z0 addr [4:0] $end
$var reg 1 [0 byte_en [0:0] $end
$var reg 16 \0 data [15:0] $end
$var reg 1 ]0 inj_sbiterr $end
$var reg 1 ^0 inj_dbiterr $end
$var reg 16 _0 current_contents [15:0] $end
$var reg 5 `0 address [4:0] $end
$var integer 32 a0 i [31:0] $end
$upscope $end
$scope task write_b $end
$var reg 5 b0 addr [4:0] $end
$var reg 1 c0 byte_en [0:0] $end
$var reg 16 d0 data [15:0] $end
$var reg 16 e0 current_contents [15:0] $end
$var reg 5 f0 address [4:0] $end
$var integer 32 g0 i [31:0] $end
$upscope $end
$scope task read_a $end
$var reg 5 h0 addr [4:0] $end
$var reg 1 i0 reset $end
$var reg 5 j0 address [4:0] $end
$var integer 32 k0 i [31:0] $end
$upscope $end
$scope task read_b $end
$var reg 5 l0 addr [4:0] $end
$var reg 1 m0 reset $end
$var reg 5 n0 address [4:0] $end
$var integer 32 o0 i [31:0] $end
$upscope $end
$scope task init_memory $end
$var integer 32 p0 i [31:0] $end
$var integer 32 q0 j [31:0] $end
$var integer 32 r0 addr_step [31:0] $end
$var integer 32 s0 status [31:0] $end
$var reg 16 t0 default_data [15:0] $end
$upscope $end
$scope function log2roundup $end
$var integer 32 u0 log2roundup [31:0] $end
$var integer 32 v0 data_value [31:0] $end
$var integer 32 w0 width [31:0] $end
$var integer 32 x0 cnt [31:0] $end
$upscope $end
$scope function collision_check $end
$var integer 32 y0 collision_check [31:0] $end
$var reg 5 z0 addr_a [4:0] $end
$var integer 32 {0 iswrite_a [31:0] $end
$var reg 5 |0 addr_b [4:0] $end
$var integer 32 }0 iswrite_b [31:0] $end
$var reg 1 ~0 c_aw_bw $end
$var reg 1 !1 c_aw_br $end
$var reg 1 "1 c_ar_bw $end
$var integer 32 #1 scaled_addra_to_waddrb_width [31:0] $end
$var integer 32 $1 scaled_addrb_to_waddrb_width [31:0] $end
$var integer 32 %1 scaled_addra_to_waddra_width [31:0] $end
$var integer 32 &1 scaled_addrb_to_waddra_width [31:0] $end
$var integer 32 '1 scaled_addra_to_raddrb_width [31:0] $end
$var integer 32 (1 scaled_addrb_to_raddrb_width [31:0] $end
$var integer 32 )1 scaled_addra_to_raddra_width [31:0] $end
$var integer 32 *1 scaled_addrb_to_raddra_width [31:0] $end
$upscope $end
$upscope $end
$scope module has_regs_fwd.axi_regs_inst $end
$var wire 1 u. ACLK $end
$var wire 1 -/ ARESET $end
$var wire 1 3/ S_VALID $end
$var wire 1 4/ S_READY $end
$var wire 7 6/ S_PAYLOAD_DATA [6:0] $end
$var wire 1 H. M_VALID $end
$var wire 1 |. M_READY $end
$var reg 7 +1 M_PAYLOAD_DATA [6:0] $end
$var reg 7 ,1 STORAGE_DATA [6:0] $end
$var wire 1 -1 S_READY_I $end
$var reg 1 .1 M_VALID_I $end
$var reg 2 /1 ARESET_D [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope task print_input_row $end
$var reg 32 01 i [31:0] $end
$var real 32 11 val_real $end
$upscope $end
$scope task read_bram_outputs $end
$var real 32 21 sum_real $end
$var real 32 31 val_real $end
$var reg 32 41 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
b0 !!
0!"
0!#
0!$
bx !%
bx !&
0!'
0!(
0!)
b0 !*
bx !+
0!,
b0 !-
b0 !.
0!/
bx !0
x!1
1"
b0 "!
b0 ""
b0 "#
b100000 "$
bx "%
bx "&
bx "'
0"(
0")
0"*
bx "+
bx ",
b0 "-
b0 ".
0"/
x"0
x"1
0#
0#!
b0 #"
b0 ##
b0 #$
b0 #%
bx #&
bx #'
bx #(
0#)
0#*
0#+
bx #,
0#-
b0 #.
0#/
x#0
bx #1
0$
b0 $!
0$"
0$#
b0 $$
b0 $%
b0 $&
bx $'
bx $(
bx $)
0$*
b0 $+
bx $,
bx $-
0$.
1$/
bx $0
bx $1
b0 %
b0 %!
0%"
0%#
b0 %$
b0 %%
b0 %&
b0 %'
bx %(
bx %)
bx %*
b0 %+
0%,
bx %-
z%.
1%/
x%0
bx %1
b0 &
b0 &!
b11 &"
b0 &#
b0 &$
b0 &%
b0 &&
b0 &'
b0 &(
bx &)
bx &*
b0 &+
b0 &,
bx &-
b0 &.
0&/
x&0
bx &1
b0 '
b0 '!
b0 '"
0'#
0'$
b1000000000000 '%
b0 '&
b0 ''
b0 '(
b0 ')
bx '*
0'+
b0 ',
0'-
0'.
b0 '/
b0 '0
bx '1
0(
b0 (!
b0 ("
0(#
0($
b0 (%
b1000000000000 (&
b0 ('
b0 ((
b0 ()
b0 (*
bx (+
b0 (,
b0 (-
0(.
b0 (/
b0 (0
bx (1
1)
b0 )!
0)"
b0 )#
bx )$
b1000000000000 )%
b0 )&
b1000000000000 )'
b0 )(
b0 ))
b0 )*
bx )+
0),
b0 )-
0).
bz )/
0)0
bx )1
0*
b0 *!
0*"
b0 *#
b0 *$
bx *%
b1000000000000 *&
b0 *'
b1000000000000 *(
b0 *)
b0 **
bx *+
bx *,
b0 *-
z*.
bz */
0*0
bx *1
0+
b0 +!
0+"
0+#
0+$
b0 +%
bx +&
b1000000000000 +'
b0 +(
b1000000000000 +)
b0 +*
0++
bx +,
0+-
bz +.
z+/
0+0
bx +1
b0 ,
b0 ,!
0,"
0,#
b0 ,$
0,%
b0 ,&
bx ,'
b1000000000000 ,(
b0 ,)
b1000000000000 ,*
b0 ,+
bx ,,
bx ,-
bz ,.
z,/
0,0
bx ,1
b0 -
b0 -!
b0 -"
b0 -#
b0 -$
b0 -%
0-&
b0 -'
bx -(
b1000000000000 -)
b0 -*
b0 -+
0-,
bx --
z-.
z-/
b0 -0
x-1
0.
0.!
0."
b11111 .#
b0 .$
b0 .%
b0 .&
0.'
b0 .(
bx .)
b1000000000000 .*
b0 .+
b0 .,
bx .-
0..
bz ./
0.0
x.1
0/
bz /!
0/"
1/#
0/$
b0 /%
b0 /&
b0 /'
0/(
b0 /)
bx /*
0/+
b0 /,
0/-
b0 /.
bz //
b0 /0
bx /1
b0 0
bz 0!
b0 0"
b10010001101001 0#
00$
00%
b0 0&
b0 0'
b0 0(
00)
b0 0*
bx 0+
b0 0,
b0 0-
b0 0.
bz 0/
b0 00
b0 01
b0 1
b0 1!
b0 1"
01#
01$
01%
01&
b0 1'
b0 1(
b0 1)
01*
bx 1+
01,
b0 1-
b0 1.
bz 1/
b0 10
r0 11
02
b0 2!
b0 2"
02#
bx 2$
02%
02&
02'
b0 2(
b0 2)
b0 2*
bx 2+
bx 2,
b0 2-
b0 2.
z2/
020
r0 21
b0 3
b0 3!
b0 3"
b10010001101001 3#
bx 3$
bx 3%
03&
03'
03(
b0 3)
b0 3*
03+
bx 3,
03-
b0 3.
z3/
030
r0 31
b0 4
b0 4!
b0 4"
b11111 4#
bx 4$
bx 4%
bx 4&
04'
04(
04)
b0 4*
b0 4+
bx 4,
bx 4-
04.
x4/
b110000 40
b0 41
15
b0 5!
x5"
bx 5#
b0 5$
bx 5%
bx 5&
bx 5'
05(
05)
05*
b0 5+
05,
bx 5-
z5.
x5/
b0 50
06
bz 6!
x6"
bx 6#
b0 6$
b0 6%
bx 6&
bx 6'
bx 6(
06)
06*
b0 6+
b0 6,
bx 6-
bx 6.
bz 6/
160
b0 7
bz 7!
x7"
x7#
b0 7$
b0 7%
b0 7&
bx 7'
bx 7(
bx 7)
07*
07+
b0 7,
07-
bz 7.
bx 7/
170
b0 8
bz 8!
x8"
bx 8#
b0 8$
b0 8%
b0 8&
b0 8'
bx 8(
bx 8)
bx 8*
bx 8+
b0 8,
b0 8-
bx 8.
b0 8/
080
b0 9
bz 9!
x9"
bx 9#
b1000000000000 9$
b0 9%
b0 9&
b0 9'
b0 9(
bx 9)
bx 9*
bx 9+
09,
b0 9-
x9.
09/
b0 90
0:
0:!
bx :"
bx :#
b0 :$
b1000000000000 :%
b0 :&
b0 :'
b0 :(
b0 :)
bx :*
bx :+
bx :,
b0 :-
x:.
b0 :/
b0 :0
1;
0;!
b11111111111111111011000111100000 ;"
bx ;#
b1000000000000 ;$
b0 ;%
b1000000000000 ;&
b0 ;'
b0 ;(
b0 ;)
b0 ;*
0;+
bx ;,
0;-
0;.
0;/
0;0
0<
0<!
bx <"
bx <#
bx <$
b1000000000000 <%
b0 <&
b1000000000000 <'
b0 <(
b0 <)
b0 <*
b0 <+
bx <,
bx <-
0<.
0</
0<0
0=
0=!
b10010001101001 ="
x=#
b0 =$
bx =%
b1000000000000 =&
b0 ='
b1000000000000 =(
b0 =)
b0 =*
b0 =+
0=,
bx =-
0=.
0=/
b0 =0
0>
0>!
bx >"
bx >#
0>$
b0 >%
bx >&
b1000000000000 >'
b0 >(
b1000000000000 >)
b0 >*
b0 >+
b0 >,
bx >-
z>.
0>/
b0 >0
1?
0?!
b110000 ?"
bx ?#
b0 ?$
0?%
b0 ?&
bx ?'
b1000000000000 ?(
b0 ?)
b1000000000000 ?*
0?+
b0 ?,
0?-
z?.
0?/
0?0
0@
0@!
b110000 @"
bx @#
b0 @$
b0 @%
0@&
b0 @'
bx @(
b1000000000000 @)
b0 @*
bx @+
b0 @,
b0 @-
bz @.
0@/
0@0
b0 A
1A!
b110000 A"
xA#
b0 A$
b0 A%
b0 A&
0A'
b0 A(
bx A)
b1000000000000 A*
bx A+
0A,
b0 A-
0A.
0A/
0A0
b0 B
1B!
b1100010011011000110101101011111011011010110010101101101010111110110011101100101011011100101111101110010011011110111011100101110011011010110100101100110 B"
bx B#
0B$
b0 B%
b0 B&
b0 B'
0B(
b0 B)
bx B*
bx B+
bx B,
b0 B-
0B.
1B/
0B0
b0 C
0C!
b1100010011011000110101101011111011011010110010101101101010111110110011101100101011011100101111101110010011011110111011100101110011011010110010101101101 C"
bx C#
0C$
0C%
b0 C&
b0 C'
b0 C(
0C)
b0 C*
0C+
bx C,
0C-
zC.
xC/
b0 C0
0D
0D!
b1 D"
b100000 D#
0D$
0D%
0D&
b0 D'
b0 D(
b0 D)
0D*
b0 D+
bx D,
bx D-
zD.
0D/
b0 D0
0E
0E!
b101 E"
bx E#
bx E$
0E%
0E&
0E'
b0 E(
b0 E)
b0 E*
b0 E+
0E,
bx E-
zE.
0E/
b0 E0
0F
1F!
b101 F"
b1 F#
bx F$
bx F%
0F&
0F'
0F(
b0 F)
b0 F*
b0 F+
b0 F,
bx F-
zF.
0F/
b0 F0
0G
0G!
b101 G"
b1 G#
bx G$
bx G%
bx G&
0G'
0G(
0G)
b0 G*
0G+
b0 G,
0G-
xG.
0G/
0G0
b0 H
0H!
b101 H"
b0 H#
b0 H$
bx H%
bx H&
bx H'
0H(
0H)
0H*
bx H+
b0 H,
b0 H-
xH.
0H/
0H0
0I
0I!
1I"
b0 I#
b0 I$
b0 I%
bx I&
bx I'
bx I(
0I)
0I*
bx I+
0I,
b0 I-
zI.
0I/
b110000 I0
0J
0J!
0J"
b1 J#
b0 J$
b0 J%
b0 J&
bx J'
bx J(
bx J)
0J*
bx J+
bx J,
b0 J-
zJ.
0J/
b0 J0
0K
0K!
0K"
b0 K#
b0 K$
b0 K%
b0 K&
b0 K'
bx K(
bx K)
bx K*
0K+
bx K,
0K-
0K.
0K/
xK0
0L
0L!
0L"
bx L#
b1000000000000 L$
b0 L%
b0 L&
b0 L'
b0 L(
bx L)
bx L*
b0 L+
bx L,
bx L-
b0 L.
1L/
xL0
0M
0M!
0M"
bx M#
b0 M$
b1000000000000 M%
b0 M&
b0 M'
b0 M(
b0 M)
bx M*
b0 M+
0M,
bx M-
b0 M.
0M/
0M0
0N
0N!
0N"
bx N#
b1000000000000 N$
b0 N%
b1000000000000 N&
b0 N'
b0 N(
b0 N)
b0 N*
b0 N+
b0 N,
bx N-
b0 N.
b0 N/
b0 N0
0O
0O!
1O"
bx O#
bx O$
b1000000000000 O%
b0 O&
b1000000000000 O'
b0 O(
b0 O)
b0 O*
0O+
b0 O,
0O-
0O.
b0 O/
b0 O0
0P
0P!
0P"
bx P#
b0 P$
bx P%
b1000000000000 P&
b0 P'
b1000000000000 P(
b0 P)
b0 P*
bx P+
b0 P,
b0 P-
b0 P.
0P/
0P0
b0 Q
0Q!
0Q"
bx Q#
0Q$
b0 Q%
bx Q&
b1000000000000 Q'
b0 Q(
b1000000000000 Q)
b0 Q*
bx Q+
0Q,
b0 Q-
b0 Q.
0Q/
0Q0
b0 R
0R!
0R"
xR#
b0 R$
0R%
b0 R&
bx R'
b1000000000000 R(
b0 R)
b1000000000000 R*
bx R+
bx R,
b0 R-
b0 R.
b11 R/
b0 R0
b0 S
0S!
bx S"
xS#
b0 S$
b0 S%
0S&
b0 S'
bx S(
b1000000000000 S)
b0 S*
0S+
bx S,
0S-
b0 S.
b0 S/
0S0
b0 T
0T!
xT"
xT#
b0 T$
b0 T%
b0 T&
0T'
b0 T(
bx T)
b1000000000000 T*
b0 T+
bx T,
bx T-
b0 T.
b0 T/
0T0
b0 U
0U!
xU"
bx U#
0U$
b0 U%
b0 U&
b0 U'
0U(
b0 U)
b100000 U*
b0 U+
0U,
bx U-
b0 U.
0U/
b0 U0
0V
1V!
bx V"
bx V#
0V$
0V%
b0 V&
b0 V'
b0 V(
0V)
b100000 V*
b0 V+
b0 V,
bx V-
b0 V.
0V/
b0 V0
zW
1W!
xW"
bx W#
0W$
0W%
0W&
b0 W'
b0 W(
b0 W)
0W*
0W+
b0 W,
0W-
b0 W.
0W/
0W0
b0 X
0X!
xX"
bx X#
bx X$
0X%
0X&
0X'
b0 X(
b0 X)
b0 X*
bx X+
b0 X,
b0 X-
b0 X.
0X/
0X0
0Y
b0 Y!
b0 Y"
bx Y#
bx Y$
bx Y%
0Y&
0Y'
0Y(
b0 Y)
0Y*
bx Y+
0Y,
b0 Y-
b0 Y.
b0 Y/
b0 Y0
0Z
b0 Z!
b0 Z"
bx Z#
bx Z$
bx Z%
bx Z&
0Z'
0Z(
0Z)
0Z*
bx Z+
bx Z,
b0 Z-
0Z.
0Z/
b11111 Z0
0[
bz [!
0["
bx [#
b0 [$
bx [%
bx [&
bx ['
0[(
0[)
0[*
0[+
bx [,
0[-
bz [.
0[/
1[0
z\
bz \!
0\"
bx \#
b0 \$
b0 \%
bx \&
bx \'
bx \(
0\)
0\*
b0 \+
bx \,
bx \-
bz \.
b0 \/
b0 \0
bz ]
z]!
0]"
b0 ]#
b0 ]$
b0 ]%
b0 ]&
bx ]'
bx ](
bx ])
0]*
b0 ]+
0],
bx ]-
b0 ].
b0 ]/
0]0
bz ^
z^!
0^"
b0 ^#
b0 ^$
b0 ^%
b0 ^&
b0 ^'
bx ^(
bx ^)
b100000 ^*
b0 ^+
b0 ^,
bx ^-
b0 ^.
b0 ^/
0^0
z_
z_!
b0 _"
b0 _#
b1000000000000 _$
b0 _%
b0 _&
b0 _'
b0 _(
bx _)
b10000 _*
0_+
b0 _,
b100000 _-
b0 _.
b0 _/
b0 _0
0`
bz `!
0`"
b0 `#
b0 `$
b1000000000000 `%
b0 `&
b0 `'
b0 `(
b0 `)
b0 `*
bx `+
b0 `,
b0 `-
b0 `.
b0 `/
b11111 `0
b0 a
bz a!
b0 a"
b100000 a#
b1000000000000 a$
b0 a%
b1000000000000 a&
b0 a'
b0 a(
b0 a)
b1000 a*
bx a+
0a,
0a-
b0 a.
xa/
bx a0
b0 b
bz b!
b0 b"
0b#
bx b$
b1000000000000 b%
b0 b&
b1000000000000 b'
b0 b(
b0 b)
b0 b*
bx b+
bx b,
b0 b-
bx b.
xb/
bx b0
b0 c
bz c!
b0 c"
bx c#
b0 c$
bx c%
b1000000000000 c&
b0 c'
b1000000000000 c(
b0 c)
b100 c*
0c+
bx c,
1c-
bz c.
xc/
xc0
b0 d
zd!
0d"
0d#
0d$
b0 d%
bx d&
b1000000000000 d'
b0 d(
b1000000000000 d)
b0 d*
b0 d+
bx d,
0d-
bx d.
xd/
bx d0
b0 e
ze!
0e"
0e#
b0 e$
0e%
b0 e&
bx e'
b1000000000000 e(
b0 e)
b10 e*
b0 e+
0e,
b0 e-
bz e.
xe/
bx e0
0f
0f!
b110000 f"
b0 f#
b0 f$
b0 f%
0f&
b0 f'
bx f(
b1000000000000 f)
b0 f*
b0 f+
b0 f,
b0 f-
0f.
bx f/
bx f0
zg
1g!
b0 g"
b0 g#
b0 g$
b0 g%
b0 g&
0g'
b0 g(
bx g)
0g*
0g+
b0 g,
b0 g-
0g.
bx g/
bx g0
bz h
bz h!
1h"
0h#
0h$
b0 h%
b0 h&
b0 h'
0h(
b0 h)
b0 h*
bx h+
b0 h,
xh-
0h.
bx h/
bx h0
bz i
bz i!
1i"
xi#
0i$
0i%
b0 i&
b0 i'
b0 i(
0i)
b0 i*
bx i+
0i,
0i-
0i.
bx i/
xi0
bz j
b0 j!
0j"
0j#
0j$
0j%
0j&
b0 j'
b0 j(
b0 j)
bx j*
bx j+
bx j,
b0 j-
0j.
bx j/
bx j0
zk
0k!
b0 k"
0k#
bx k$
0k%
0k&
0k'
b0 k(
b0 k)
bx k*
0k+
bx k,
b0 k-
0k.
b110000 k/
bx k0
zl
b0 l!
b0 l"
b0 l#
bx l$
bx l%
0l&
0l'
0l(
b0 l)
bx l*
b0 l+
bx l,
0l-
0l.
b110000 l/
bx l0
0m
0m!
0m"
0m#
bx m$
bx m%
bx m&
0m'
0m(
0m)
bx m*
b0 m+
0m,
1m-
1m.
b110000 m/
xm0
0n
0n!
0n"
b0 n#
b0 n$
bx n%
bx n&
bx n'
0n(
0n)
bx n*
b0 n+
b0 n,
0n-
1n.
b11011100110111101011111011000110110111101100101010111110110011001101001011011000110010101011111011011000110111101100001011001000110010101100100 n/
bx n0
0o
0o!
b0 o"
0o#
b0 o$
b0 o%
bx o&
bx o'
bx o(
0o)
bx o*
0o+
b0 o,
1o-
0o.
b1100010011011000110101101011111011011010110010101101101010111110110011101100101011011100101111101101111011101010111010000101110011011010110010101101101 o/
bx o0
zp
0p!
b0 p"
xp#
b0 p$
b0 p%
b0 p&
bx p'
bx p(
bx p)
bx p*
bx p+
b0 p,
0p-
0p.
b1 p/
b100000 p0
zq
0q!
0q"
b0 q#
b0 q$
b0 q%
b0 q&
b0 q'
bx q(
bx q)
bx q*
bx q+
0q,
0q-
xq.
b101 q/
bx q0
bz r
0r!
0r"
b111 r#
b1000000000000 r$
b0 r%
b0 r&
b0 r'
b0 r(
bx r)
bx r*
bx r+
bx r,
0r-
1r.
b101 r/
b1 r0
0s
0s!
0s"
b100000 s#
b0 s$
b1000000000000 s%
b0 s&
b0 s'
b0 s(
b0 s)
bx s*
0s+
bx s,
0s-
0s.
b101 s/
bx s0
0t
1t!
0t"
b0 t#
b1000000000000 t$
b0 t%
b1000000000000 t&
b0 t'
b0 t(
b0 t)
bx t*
b0 t+
bx t,
b0 t-
0t.
b101 t/
b0 t0
zu
0u!
b0 u"
b0 u#
bx u$
b1000000000000 u%
b0 u&
b1000000000000 u'
b0 u(
b0 u)
bx u*
b0 u+
0u,
0u-
0u.
1u/
b0 u0
zv
0v!
b0 v"
b100000 v#
b0 v$
bx v%
b1000000000000 v&
b0 v'
b1000000000000 v(
b0 v)
bx v*
b0 v+
b0 v,
0v-
0v.
xv/
b1 v0
zw
0w!
b0 w"
b0 w#
0w$
b0 w%
bx w&
b1000000000000 w'
b0 w(
b1000000000000 w)
bx w*
0w+
b0 w,
0w-
0w.
0w/
b0 w0
zx
0x!
b0 x"
b0 x#
b0 x$
0x%
b0 x&
bx x'
b1000000000000 x(
b0 x)
bx x*
bx x+
b0 x,
0x-
0x.
0x/
bx x0
zy
0y!
0y"
b0 y#
b0 y$
b0 y%
0y&
b0 y'
bx y(
b1000000000000 y)
0y*
bx y+
0y,
0y-
0y.
0y/
bx y0
zz
0z!
0z"
b0 z#
b0 z$
b0 z%
b0 z&
0z'
b0 z(
bx z)
b0 z*
bx z+
bx z,
0z-
0z.
0z/
bx z0
z{
0{!
b110000 {"
b0 {#
0{$
b0 {%
b0 {&
b0 {'
0{(
b0 {)
b0 {*
0{+
bx {,
0{-
0{.
1{/
bx {0
z|
0|!
b0 |"
0|#
0|$
0|%
b0 |&
b0 |'
b0 |(
0|)
b0 |*
b0 |+
bx |,
0|-
0|.
x|/
bx |0
0}
0}!
1}"
b0 }#
0}$
0}%
0}&
b0 }'
b0 }(
b0 })
0}*
b0 }+
0},
b0 }-
0}.
0}/
bx }0
b0 ~
1~!
1~"
b0 ~#
bx ~$
0~%
0~&
0~'
b0 ~(
b0 ~)
bx ~*
b0 ~+
b0 ~,
b0 ~-
0~.
0~/
x~0
$end

#100
b0 !0
0"0
1#0
b0 $0
0%0
b0 S"
0T"
1U"
b0 V"
0W"
0X"

#5000
1!
b100000 "$
b100000 %$
1(
06"
07"
b0 <#
0=#
b0 >#
1?!
b10000 _*
b100000 a#
b1000 a*
0b/
b100 c*
0c/
0d/
b10 e*
0e/
b0 h0
0i#
0i0
b0 j0
1k.
1o.
b111 r#
b100000 s#

#5100
b11101100100 '"
b11101100100 Y"
b11101100100 k"

#10000
0!
0(
0?!
0k.
0o.

#15000
1!
b100000 "$
b100000 %$
1(
1?!
b10000 _*
b100000 a#
b1000 a*
b100 c*
b10 e*
1k.
1o.
b111 r#
b100000 s#

#15100
b11101100100 "!
b11101100100 4
b11101100100 9
b11101100100 Z"
b11101100100 ]#

#20000
0!
0"
0(
0)
0?!
0k.
0o.

#25000
1!
b100000 %$
b1 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#30000
0!
0(
0?!
0k.
0o.

#35000
1!
b100000 %$
b10 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b10 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#40000
0!
1#
0(
1*
0?!
b1 _#
0k.
0o.

#45000
1!
b100000 %$
b11 '
1(
1?!
b1 ^#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b11 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#50000
0!
0#
0(
0*
0?!
0k.
0o.

#55000
1!
b1 ""
b100000 %$
b100 '
1(
b1 3
b1 7
1?!
b1 Y!
b1 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b100 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b1 ~

#55100
b1 S"

#60000
0!
0(
0?!
0k.
0o.

#65000
1!
b10 ""
b100000 %$
b101 '
1(
b10 3
b10 7
b1 <#
b1 >#
1?!
b10 Y!
b10 `#
b10000 `*
b1000 b*
b0 c#
b100 d*
b10 f*
1k.
1o.
b101 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b10 ~

#65100
b1001010101011 '"
b10 S"
b1001010101011 Y"
b1001010101011 k"

#70000
0!
0(
0?!
0k.
0o.

#75000
1!
b11 ""
b100000 %$
b110 '
1(
b11 3
b11 7
b10 <#
b10 >#
1?!
b11 Y!
b11 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b110 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b11 ~

#75100
b1001010101011 "!
b1111110100100010 '"
b1001010101011 4
b1001010101011 9
b11 S"
b1111110100100010 Y"
b1001010101011 Z"
b1001010101011 ]#
b1111110100100010 k"

#80000
0!
0(
0?!
0k.
0o.

#85000
1!
b100 ""
b100000 %$
b111 '
1(
b100 3
b100 7
b11 <#
b11 >#
1?!
b100 Y!
b100 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b111 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b100 ~

#85100
b1111110100100010 "!
b1101011000101110 '"
b1111110100100010 4
b1111110100100010 9
b100 S"
b1101011000101110 Y"
b1111110100100010 Z"
b1111110100100010 ]#
b1101011000101110 k"

#90000
0!
0(
0?!
0k.
0o.

#95000
1!
b101 ""
b100000 %$
b1000 '
1(
b101 3
b101 7
b100 <#
b100 >#
1?!
b101 Y!
b101 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1000 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b101 ~

#95100
b1101011000101110 "!
b1100000000001111 '"
b1101011000101110 4
b1101011000101110 9
b101 S"
b1100000000001111 Y"
b1101011000101110 Z"
b1101011000101110 ]#
b1100000000001111 k"

#100000
0!
0(
0?!
0k.
0o.

#105000
1!
b110 ""
b100000 %$
b1001 '
1(
b110 3
b110 7
b101 <#
b101 >#
1?!
b110 Y!
b110 `#
b10000 `*
b1000 b*
b11101100100 c#
b100 d*
b10 f*
1k.
1o.
b1001 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b110 ~

#105100
b1100000000001111 "!
b11110010010101 '"
b1100000000001111 4
b1100000000001111 9
b110 S"
b11110010010101 Y"
b1100000000001111 Z"
b1100000000001111 ]#
b11110010010101 k"

#110000
0!
0(
0?!
0k.
0o.

#115000
1!
b111 ""
b100000 %$
b1010 '
1(
b111 3
b111 7
b110 <#
b110 >#
1?!
b111 Y!
b111 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1010 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b111 ~

#115100
b11110010010101 "!
b100011101100 '"
b11110010010101 4
b11110010010101 9
b111 S"
b100011101100 Y"
b11110010010101 Z"
b11110010010101 ]#
b100011101100 k"

#120000
0!
0(
0?!
0k.
0o.

#125000
1!
b1000 ""
b100000 %$
b1011 '
1(
b1000 3
b1000 7
b111 <#
b111 >#
1?!
b1000 Y!
b1000 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1011 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b1000 ~

#125100
b100011101100 "!
b1100100001101100 '"
b100011101100 4
b100011101100 9
b1000 S"
b1100100001101100 Y"
b100011101100 Z"
b100011101100 ]#
b1100100001101100 k"

#130000
0!
0(
0?!
0k.
0o.

#135000
1!
b1001 ""
b100000 %$
b1100 '
1(
b1001 3
b1001 7
b1000 <#
b1000 >#
1?!
b1001 Y!
b1001 `#
b10000 `*
b1000 b*
b1001010101011 c#
b100 d*
b10 f*
1k.
1o.
b1100 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b1001 ~

#135100
b1100100001101100 "!
b1111001101010000 '"
b1100100001101100 4
b1100100001101100 9
b1001 S"
b1111001101010000 Y"
b1100100001101100 Z"
b1100100001101100 ]#
b1111001101010000 k"

#140000
0!
0(
0?!
0k.
0o.

#145000
1!
b1010 ""
b100000 %$
b1101 '
1(
b1010 3
b1010 7
b1001 <#
b1001 >#
1?!
b1010 Y!
b1010 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1101 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b1010 ~

#145100
b1111001101010000 "!
b1100010110001101 '"
b1111001101010000 4
b1111001101010000 9
b1010 S"
b1100010110001101 Y"
b1111001101010000 Z"
b1111001101010000 ]#
b1100010110001101 k"

#150000
0!
0(
0?!
0k.
0o.

#155000
1!
b1011 ""
b100000 %$
b1110 '
1(
b1011 3
b1011 7
b1010 <#
b1010 >#
1?!
b1011 Y!
b1011 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1110 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b1011 ~

#155100
b1100010110001101 "!
b10001000110110 '"
b1100010110001101 4
b1100010110001101 9
b1011 S"
b10001000110110 Y"
b1100010110001101 Z"
b1100010110001101 ]#
b10001000110110 k"

#160000
0!
0(
0?!
0k.
0o.

#165000
1!
b1100 ""
b100000 %$
b1111 '
1(
b1100 3
b1100 7
b1011 <#
b1011 >#
1?!
b1100 Y!
b1100 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1111 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b1100 ~

#165100
b10001000110110 "!
b11110110110010 '"
b10001000110110 4
b10001000110110 9
b1100 S"
b11110110110010 Y"
b10001000110110 Z"
b10001000110110 ]#
b11110110110010 k"

#170000
0!
0(
0?!
0k.
0o.

#175000
1!
b1101 ""
b100000 %$
b10000 '
1(
b1101 3
b1101 7
b1100 <#
b1100 >#
1?!
b1101 Y!
b1101 `#
b10000 `*
b1000 b*
b11110010010101 c#
b100 d*
b10 f*
1k.
1o.
b10000 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b1101 ~

#175100
b11110110110010 "!
b1100110010110111 '"
b11110110110010 4
b11110110110010 9
b1101 S"
b1100110010110111 Y"
b11110110110010 Z"
b11110110110010 ]#
b1100110010110111 k"

#180000
0!
0(
0?!
0k.
0o.

#185000
1!
b1110 ""
b100000 %$
b10001 '
1(
b1110 3
b1110 7
b1101 <#
b1101 >#
1?!
b1110 Y!
b1110 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b10001 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b1110 ~

#185100
b1100110010110111 "!
b1100011001001101 '"
b1100110010110111 4
b1100110010110111 9
b1110 S"
b1100011001001101 Y"
b1100110010110111 Z"
b1100110010110111 ]#
b1100011001001101 k"

#190000
0!
0(
0?!
0k.
0o.

#195000
1!
b1111 ""
b100000 %$
b10010 '
1(
b1111 3
b1111 7
b1110 <#
b1110 >#
1?!
b1111 Y!
b1111 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b10010 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b1111 ~

#195100
b1100011001001101 "!
b1100001110010001 '"
b1100011001001101 4
b1100011001001101 9
b1111 S"
b1100001110010001 Y"
b1100011001001101 Z"
b1100011001001101 ]#
b1100001110010001 k"

#200000
0!
0(
0?!
0k.
0o.

#205000
1!
b10000 ""
b100000 %$
b10011 '
1(
b10000 3
b10000 7
b1111 <#
b1111 >#
1?!
b10000 Y!
b10000 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b10011 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b10000 ~

#205100
b1100001110010001 "!
b101001111 '"
b1100001110010001 4
b1100001110010001 9
b10000 S"
b101001111 Y"
b1100001110010001 Z"
b1100001110010001 ]#
b101001111 k"

#210000
0!
0(
0?!
0k.
0o.

#215000
1!
b10001 ""
b100000 %$
b10100 '
1(
b10001 3
b10001 7
b10000 <#
b10000 >#
1?!
b10001 Y!
b10001 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b10100 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b10001 ~

#215100
b101001111 "!
b10001110110010 '"
b101001111 4
b101001111 9
b10001 S"
b10001110110010 Y"
b101001111 Z"
b101001111 ]#
b10001110110010 k"

#220000
0!
0(
0?!
0k.
0o.

#225000
1!
b10010 ""
b100000 %$
b10101 '
1(
b10010 3
b10010 7
b10001 <#
b10001 >#
1?!
b10010 Y!
b10010 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b10101 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b10010 ~

#225100
b10001110110010 "!
b1101100011011110 '"
b10001110110010 4
b10001110110010 9
b10010 S"
b1101100011011110 Y"
b10001110110010 Z"
b10001110110010 ]#
b1101100011011110 k"

#230000
0!
0(
0?!
0k.
0o.

#235000
1!
b10011 ""
b100000 %$
b10110 '
1(
b10011 3
b10011 7
b10010 <#
b10010 >#
1?!
b10011 Y!
b10011 `#
b10000 `*
b1000 b*
b11110110110010 c#
b100 d*
b10 f*
1k.
1o.
b10110 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b10011 ~

#235100
b1101100011011110 "!
b1101100000111100 '"
b1101100011011110 4
b1101100011011110 9
b10011 S"
b1101100000111100 Y"
b1101100011011110 Z"
b1101100011011110 ]#
b1101100000111100 k"

#240000
0!
0(
0?!
0k.
0o.

#245000
1!
b10100 ""
b100000 %$
b10111 '
1(
b10100 3
b10100 7
b10011 <#
b10011 >#
1?!
b10100 Y!
b10100 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b10111 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b10100 ~

#245100
b1101100000111100 "!
b1101010100111 '"
b1101100000111100 4
b1101100000111100 9
b10100 S"
b1101010100111 Y"
b1101100000111100 Z"
b1101100000111100 ]#
b1101010100111 k"

#250000
0!
0(
0?!
0k.
0o.

#255000
1!
b10101 ""
b100000 %$
b11000 '
1(
b10101 3
b10101 7
b10100 <#
b10100 >#
1?!
b10101 Y!
b10101 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b11000 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b10101 ~

#255100
b1101010100111 "!
b11110110011001 '"
b1101010100111 4
b1101010100111 9
b10101 S"
b11110110011001 Y"
b1101010100111 Z"
b1101010100111 ]#
b11110110011001 k"

#260000
0!
0(
0?!
0k.
0o.

#265000
1!
b10110 ""
b100000 %$
b11001 '
1(
b10110 3
b10110 7
b10101 <#
b10101 >#
1?!
b10110 Y!
b10110 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b11001 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b10110 ~

#265100
b11110110011001 "!
b11100001011100 '"
b11110110011001 4
b11110110011001 9
b10110 S"
b11100001011100 Y"
b11110110011001 Z"
b11110110011001 ]#
b11100001011100 k"

#270000
0!
0(
0?!
0k.
0o.

#275000
1!
b10111 ""
b100000 %$
b11010 '
1(
b10111 3
b10111 7
b10110 <#
b10110 >#
1?!
b10111 Y!
b10111 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b11010 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b10111 ~

#275100
b11100001011100 "!
b1000111000001 '"
b11100001011100 4
b11100001011100 9
b10111 S"
b1000111000001 Y"
b11100001011100 Z"
b11100001011100 ]#
b1000111000001 k"

#280000
0!
0(
0?!
0k.
0o.

#285000
1!
b11000 ""
b100000 %$
b11011 '
1(
b11000 3
b11000 7
b10111 <#
b10111 >#
1?!
b11000 Y!
b11000 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b11011 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b11000 ~

#285100
b1000111000001 "!
b11010111101101 '"
b1000111000001 4
b1000111000001 9
b11000 S"
b11010111101101 Y"
b1000111000001 Z"
b1000111000001 ]#
b11010111101101 k"

#290000
0!
0(
0?!
0k.
0o.

#295000
1!
b11001 ""
b100000 %$
b11100 '
1(
b11001 3
b11001 7
b11000 <#
b11000 >#
1?!
b11001 Y!
b11001 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b11100 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b11001 ~

#295100
b11010111101101 "!
b1110110101011111 '"
b11010111101101 4
b11010111101101 9
b11001 S"
b1110110101011111 Y"
b11010111101101 Z"
b11010111101101 ]#
b1110110101011111 k"

#300000
0!
0(
0?!
0k.
0o.

#305000
1!
b11010 ""
b100000 %$
b11101 '
1(
b11010 3
b11010 7
b11001 <#
b11001 >#
1?!
b11010 Y!
b11010 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b11101 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b11010 ~

#305100
b1110110101011111 "!
b11010011000010 '"
b1110110101011111 4
b1110110101011111 9
b11010 S"
b11010011000010 Y"
b1110110101011111 Z"
b1110110101011111 ]#
b11010011000010 k"

#310000
0!
0(
0?!
0k.
0o.

#315000
1!
b11011 ""
b100000 %$
b11110 '
1(
b11011 3
b11011 7
b11010 <#
b11010 >#
1?!
b11011 Y!
b11011 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b11110 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b11011 ~

#315100
b11010011000010 "!
b110000111111 '"
b11010011000010 4
b11010011000010 9
b11011 S"
b110000111111 Y"
b11010011000010 Z"
b11010011000010 ]#
b110000111111 k"

#320000
0!
0(
0?!
0k.
0o.

#325000
1!
b11100 ""
b100000 %$
b11111 '
1(
b11100 3
b11100 7
b11011 <#
b11011 >#
1?!
b11100 Y!
b11100 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b11111 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b11100 ~

#325100
b110000111111 "!
b10111101000 '"
b110000111111 4
b110000111111 9
b11100 S"
b10111101000 Y"
b110000111111 Z"
b110000111111 ]#
b10111101000 k"

#330000
0!
0(
0?!
0k.
0o.

#335000
1!
b11101 ""
b100000 %$
b100000 '
1(
b11101 3
b11101 7
b11100 <#
b11100 >#
1?!
b11101 Y!
b11101 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b100000 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b11101 ~

#335100
b10111101000 "!
b1101101010100110 '"
b10111101000 4
b10111101000 9
b11101 S"
b1101101010100110 Y"
b10111101000 Z"
b10111101000 ]#
b1101101010100110 k"

#340000
0!
0(
0?!
0k.
0o.

#345000
1!
b11110 ""
b100000 %$
b100001 '
1(
b11110 3
b11110 7
b11101 <#
b11101 >#
1?!
b11110 Y!
b11110 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b100001 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b11110 ~

#345100
b1101101010100110 "!
b1101111100101001 '"
b1101101010100110 4
b1101101010100110 9
b11110 S"
b1101111100101001 Y"
b1101101010100110 Z"
b1101101010100110 ]#
b1101111100101001 k"

#350000
0!
0(
0?!
0k.
0o.

#355000
1!
b11111 ""
b100000 %$
b100010 '
1(
b11111 3
b11111 7
b11110 <#
b11110 >#
1?!
b11111 Y!
b10 _#
b11111 `#
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b100010 q#
b111 t#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b11111 ~

#355100
b1101111100101001 "!
b1100010000100101 '"
b1101111100101001 4
b1101111100101001 9
b11111 S"
b1100010000100101 Y"
b1101111100101001 Z"
b1101111100101001 ]#
b1100010000100101 k"

#360000
0!
0(
0?!
0k.
0o.

#365000
1!
b0 ""
b100000 %$
b100011 '
1(
1.
b100000 01
r-0.51312255859375 11
b0 3
b0 7
b11111 <#
b11111 >#
1?!
b0 Y!
b10 ^#
b0 _#
b0 `#
b10000 `*
1b#
b1000 b*
b100 d*
b10 f*
1k.
1o.
b100011 q#
b111 t#
b1 u#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
b0 ~

#365100
b1100010000100101 "!
b10010001101001 '"
b1100010000100101 4
b1100010000100101 9
b0 S"
b10010001101001 Y"
b1100010000100101 Z"
b1100010000100101 ]#
b10010001101001 k"

#370000
0!
0(
0?!
0k.
0o.

#375000
1!
b100000 %$
b100100 '
1(
0.
b0 <#
b0 >#
1?!
b0 ^#
b10000 `*
0b#
b1000 b*
b100 d*
b10 f*
1k.
1o.
b100100 q#
b111 t#
b10 u#
b100000 v#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#375100
b10010001101001 "!
b11101100100 '"
b10010001101001 4
b10010001101001 9
b11101100100 Y"
b10010001101001 Z"
b10010001101001 ]#
b11101100100 k"

#380000
0!
0(
0?!
0k.
0o.

#385000
1!
b100000 %$
b100101 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b100101 q#
b111 t#
b100 u#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#385100
b11101100100 "!
b11101100100 4
b11101100100 9
b11101100100 Z"
b11101100100 ]#

#390000
0!
0(
0?!
0k.
0o.

#395000
1!
b100000 %$
b100110 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b100110 q#
b111 t#
b1000 u#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#400000
0!
0(
0?!
0k.
0o.

#405000
1!
b100000 %$
b100111 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b100111 q#
b111 t#
b10000 u#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#410000
0!
0(
0?!
0k.
0o.

#415000
1!
b100000 %$
b101000 '
1(
1?!
b10000 `*
b1000 b*
1d#
b100 d*
b10 f*
1k.
1o.
b101000 q#
b111 t#
b100000 u#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#420000
0!
0(
0?!
0k.
0o.

#425000
1!
b100000 %$
b101001 '
1(
1?!
b10000 `*
b1000 b*
0d#
b100 d*
1e#
b11110110110010 f#
b10 f*
1k.
1o.
b101001 q#
b111 t#
b0 u#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#430000
0!
0(
0?!
0k.
0o.

#435000
1!
b100000 %$
b101010 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
0e#
b10 f*
b11110110110010 g#
1h#
1k.
1o.
b101010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
1|#
b11110110110010 }#

#440000
0!
0(
0?!
0k.
0o.

#445000
1!
1!$
b100000 #$
b100000 $$
b100000 %$
b101011 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
0h#
1k.
1o.
b101011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
0|#
b11110110110010 ~#

#450000
0!
0(
0?!
0k.
0o.

#455000
1!
0!$
b100000 %$
b101100 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1i#
1k.
1o.
b101100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#460000
0!
0(
0?!
0k.
0o.

#465000
1!
b111111110000000000 !%
b111111 !&
b111000100 "%
b111111111000000000 "&
b111000 "'
b111111001 #&
b111111000000000000 #'
b111100 #(
b11100111 $'
b111111100000000000 $(
b111111 $)
b100000 %$
b100100001 %(
b111111111000000000 %)
b111001 %*
b100000 &$
b110111000 &)
b111111001000000000 &*
b101101 '
1'$
b1101100 '*
1(
b1110100001011101 )$
b1110101111101011 *%
b1111011100111101 +&
b1110000101110111 ,'
b1110000111110110 -(
b1110000010010111 .)
b1111001001101100 /*
b110100 2$
b111110100000000000 3$
b110101 3%
b1011101 4$
b111110101000000000 4%
b111011 4&
b111101011 5%
b111111011000000000 5&
b110000 5'
b100111101 6&
b111110000000000000 6'
b110000 6(
b101110111 7'
b111110000000000000 7(
b110000 7)
b111110110 8(
b111110000000000000 8)
b111001 8*
b10010111 9)
b111111001000000000 9*
b1101100 :*
b1110011100111101 <$
b1111111000001110 =%
b1110011010100010 >&
1?!
b1110001000100110 ?'
b1110110101100111 @(
b1110011000011111 A)
b1111001001101100 B*
b110011 E$
b111110011000000000 F$
b111111 F%
b100111101 G$
b111111111000000000 G%
b110011 G&
b1110 H%
b111110011000000000 H&
b110001 H'
b10100010 I&
b111110001000000000 I'
b110110 I(
b100110 J'
b111110110000000000 J(
b110011 J)
b101100111 K(
b111110011000000000 K)
b111001 K*
b11111 L)
b111111001000000000 L*
b1101100 M*
b1111001000001101 O$
b1111010100000011 P%
b1110011011001011 Q&
b1110001111000001 R'
b1110001010101110 S(
b1110111111011100 T)
b111001 X$
b111111001000000000 Y$
b111010 Y%
b1101 Z$
b111111010000000000 Z%
b110011 Z&
b100000011 [%
b111110011000000000 [&
b110001 ['
b11001011 \&
b111110001000000000 \'
b110001 \(
b111000001 ]'
b111110001000000000 ](
b110111 ])
b10101110 ^(
b111110111000000000 ^)
b111011100 _)
b10000 `*
b1111001110100011 b$
b1000 b*
b1111111010101010 c%
b1111100110000000 d&
b100 d*
b0 e'
b1111001011001110 f(
b10 f*
b1111010100111110 g)
0i#
1j#
b111001 k$
1k.
b111111001000000000 l$
b111111 l%
b110100011 m$
b111111111000000000 m%
b111100 m&
b10101010 n%
b111111100000000000 n&
b1000000 n'
b110000000 o&
b111000000000000000 o'
b111001 o(
1o.
b1111111000000000 p'
b111111001000000000 p(
b111010 p)
b101101 q#
b11001110 q(
b111111010000000000 q)
b100111110 r)
b111 t#
b1111110111000100 u$
b1111111111111001 v%
b10000 w#
b1111000011100111 w&
b1000 x#
b1111100100100001 x'
b100 y#
b1111111110111000 y(
b10 z#
b1111001001101100 z)
b1 {#
b111110 ~$

#470000
0!
0(
0?!
0k.
0o.

#475000
1!
1!)
b111001 !*
1"*
b100000 %$
b101110 '
0'$
b0 '%
1(
b0 (&
b0 )%
b0 )'
b0 *&
b0 *(
b0 +'
b0 +)
b1110100001011101 ,$
b0 ,(
b0 ,*
b1011101 -$
b1110101111101011 -%
b0 -)
b110100 .$
b111101011 .%
b1111011100111101 .&
b0 .*
1/$
b110101 /%
b100111101 /&
b1110000101110111 /'
10%
b111011 0&
b101110111 0'
b1110000111110110 0(
11&
b110000 1'
b111110110 1(
b1110000010010111 1)
12'
b110000 2(
b10010111 2)
b1111001001101100 2*
13(
b110000 3)
b1101100 3*
14)
b111001 4*
15*
b0 9$
b0 :%
b0 ;$
b0 ;&
b0 <%
b0 <'
b0 =&
b0 =(
b0 >'
b0 >)
1?!
b1110011100111101 ?$
b0 ?(
b0 ?*
b100111101 @$
b1111111000001110 @%
b0 @)
b110011 A$
b1110 A%
b1110011010100010 A&
b0 A*
1B$
b111111 B%
b10100010 B&
b1110001000100110 B'
1C%
b110011 C&
b100110 C'
b1110110101100111 C(
1D&
b110001 D'
b101100111 D(
b1110011000011111 D)
1E'
b110110 E(
b11111 E)
b1111001001101100 E*
1F(
b110011 F)
b1101100 F*
1G)
b111001 G*
1H*
b0 L$
b0 M%
b0 N$
b0 N&
b0 O%
b0 O'
b0 P&
b0 P(
b0 Q'
b0 Q)
b1111001000001101 R$
b0 R(
b0 R*
b1101 S$
b1111010100000011 S%
b0 S)
b111001 T$
b100000011 T%
b1110011011001011 T&
b0 T*
1U$
b111010 U%
b11001011 U&
b1110001111000001 U'
1V%
b110011 V&
b111000001 V'
b1110001010101110 V(
1W&
b110001 W'
b10101110 W(
b1110111111011100 W)
1X'
b110001 X(
b111011100 X)
1Y(
b110111 Y)
1Z)
b0 _$
b0 `%
b10000 `*
b0 a$
b0 a&
b0 b%
b0 b'
b1000 b*
b0 c&
b0 c(
b0 d'
b0 d)
b100 d*
b1111001110100011 e$
b0 e(
b110100011 f$
b1111111010101010 f%
b0 f)
b10 f*
b111001 g$
b10101010 g%
b1111100110000000 g&
1h$
b111111 h%
b110000000 h&
1i%
b111100 i&
b1111111000000000 i'
b1111001011001110 i(
0j#
1j&
b11001110 j(
b1111010100111110 j)
1k'
b111001 k(
b100111110 k)
1k.
1l(
b111010 l)
1m)
1o.
b101110 q#
b0 r$
b0 s%
b111 t#
b0 t$
b0 t&
b0 u%
b0 v&
b0 v(
b10000 w#
b0 w)
b1000 x#
b1111110111000100 x$
b0 x(
b100 y#
b111000100 y$
b1111111111111001 y%
b0 y)
b10 z#
b111110 z$
b111111001 z%
b1111000011100111 z&
b1 {#
1{$
b111111 {%
b11100111 {&
b1111100100100001 {'
1|%
b111000 |&
b100100001 |'
b1111111110111000 |(
1}&
b111100 }'
b110111000 }(
b1111001001101100 })
1~'
b111111 ~(
b1101100 ~)

#480000
0!
0(
0?!
0k.
0o.

#485000
1!
1!(
0!)
1")
0"*
b110001110110 #%
1#*
b110101000110 $%
b111000011111 $&
b100000 %$
b111000100 %%
b111100001010 %&
b10111100011 %'
b111111001 &&
b11001000101 &'
b100110110100 &(
b101111 '
b110111101100 '%
b11100111 ''
b101001010110 '(
b111000011111 ')
1(
b101110110111110011000 (%
b111111111001 (&
b100100001 ((
b111100001010 ()
b11010101011 (*
b110111101100 )%
b111011010101010111010 )&
b11000111101 )'
b110111000 ))
b11100011011 )*
b111111111001 *&
b1011010100001000011 *'
b101001101110 *(
b1101100 **
b11000111101 +'
b10111010101100010110 +(
b111110111100 +)
b101001101110 ,(
b110011101100100110000 ,)
b11011011010 ,*
b111110111100 -)
b101111111101100100 -*
b11011011010 .*
0/$
10$
00%
11%
01&
12&
02'
13'
03(
14(
04)
b1110010010 5$
15)
05*
b1111001110 6$
b10000001100 6%
16*
b1011101 7$
b10001001111 7%
b100010010000 7&
b111101011 8%
b100100011111 8&
b1000101010 8'
b1110101000 9$
b100111101 9&
b1001001110 9'
b1000101010 9(
b10110000111010110 :$
b10010010000 :%
b101110111 :'
b1001001110 :(
b1000101010 :)
b1110101000 ;$
b10000100001110000101 ;%
b100101000100 ;&
b111110110 ;(
b1001001110 ;)
b11010101011 ;*
b10010010000 <%
b10110100101101100011 <&
b1001100000 <'
b10010111 <)
b11100011011 <*
b100101000100 =&
b110110000001000010 ='
b1001110010 =(
b1101100 =*
b1001100000 >'
b1001000010011110100 >(
b1000111111 >)
1?!
b1001110010 ?(
b10101110000000010 ?)
b11011011010 ?*
b1000111111 @)
b101111111101100100 @*
b11011011010 A*
0B$
1C$
0C%
1D%
0D&
1E&
0E'
1F'
0F(
1G(
0G)
b1100100111 H$
1H)
0H*
b1101011011 I$
b111000011111 I%
1I*
b100111101 J$
b111100001010 J%
b1100100111 J&
b1110 K%
b1101011011 K&
b1001110100 K'
b1101101001 L$
b10100010 L&
b1010011101 L'
b10010010110 L(
b1000010011110101111 M$
b111000101100 M%
b100110 M'
b10011100010 M(
b1100100111 M)
b1101101001 N$
b1101001010001100 N%
b1101001000 N&
b101100111 N(
b1101011011 N)
b11010101011 N*
b111000101100 O%
b100001111110010110 O&
b1001111010 O'
b11111 O)
b11100011011 O*
b1101001000 P&
b110001101001110 P'
b10100000011 P(
b1101100 P*
b1001111010 Q'
b1101101100011101110 Q(
b1100101101 Q)
b10100000011 R(
b110100000000101 R)
b11011011010 R*
b1100101101 S)
b101111111101100100 S*
b11011011010 T*
0U$
1V$
0V%
1W%
0W&
1X&
0X'
1Y'
0Y(
1Z(
0Z)
b11010101011 [$
1[)
b11100011011 \$
b11110001111 \%
b1101 ]$
b100000001101 ]%
b1100100111 ]&
b100000011 ^%
b1101011011 ^&
b1001110100 ^'
b11010110000 _$
b11001011 _&
b1010011101 _'
b1001110100 _(
b101110001011111 `$
b100000010001 `%
b111000001 `'
b1010011101 `(
b10100110010 `)
b10000 `*
b11010110000 a$
b10000010010100100111 a%
b1101010001 a&
b10101110 a(
b10110001000 a)
b100000010001 b%
b101010100100101001 b&
b1010111101 b'
b111011100 b)
b1000 b*
b1101010001 c&
b1001001010101011101 c'
b1010010000 c(
b1010111101 d'
b11100011010110110 d(
b10111010110 d)
b100 d*
b1010010000 e(
b10100100100011100000 e)
b10111010110 f)
b10 f*
0h$
1i$
0i%
1j%
0j&
1k&
0k'
1k.
1l'
0l(
1m(
0m)
b11010101011 n$
1n)
b11100011011 o$
b111000011111 o%
1o.
b110100011 p$
b111100001010 p%
b100110110100 p&
b101111 q#
b10101010 q%
b101001010110 q&
b1 q'
b11101100101 r$
b110000000 r&
b1 r'
b11010101011 r(
b10111010000100110001 s$
b111010111110 s%
b1111111000000000 s'
b11100011011 s(
b11110001111 s)
b111 t#
b11101100101 t$
b10011111110010100100 t%
b101010101100 t&
b11001110 t(
b100000001101 t)
b111010111110 u%
b11111000000100000000 u&
b100111110 u)
b101010101100 v&
b11100000110 v(
b10000 w#
b1011011011110111010 w(
b100000101111 w)
b1000 x#
b11100000110 x(
b10100000000000100110 x)
b100 y#
b100000101111 y)
b10 z#
b1 {#
0{$
1|$
0|%
1}%
0}&
1~&
0~'

#490000
0!
0(
0?!
0k.
0o.

#495000
1!
1!'
0!(
1"(
0")
1#)
0#*
1$*
b11011011010 $+
b100000 %$
b1000000000000 &,
b110000 '
1(
1($
b111000101100 (-
b1110101000 *$
1+$
b10010010000 +%
1,%
b100101000100 ,&
b11011011010 ,+
1-&
b1001100000 -'
1.'
b1001110010 .(
b1010111101 .,
1/(
b1000111111 /)
00$
10)
b11011011010 0*
b10010010000 0-
11$
01%
11*
12%
02&
13&
03'
14'
04(
b100000101111 4+
15(
05)
16)
06*
b1001111010 6,
17*
b110111101100 8-
b10111010110 <+
b1101101001 =$
1>$
b111000101100 >%
b1001100000 >,
1?!
1?%
b1101001000 ?&
1@&
b1001111010 @'
b11101100101 @-
1A'
b10100000011 A(
1B(
b1100101101 B)
0C$
1C)
b11011011010 C*
1D$
0D%
1D*
b1100101101 D+
1E%
0E&
1F&
0F'
b11000111101 F,
1G'
0G(
1H(
0H)
b11010110000 H-
1I)
0I*
1J*
b1000111111 L+
b101010101100 N,
b11010110000 P$
b1101101001 P-
1Q$
b100000010001 Q%
1R%
b1101010001 R&
1S&
b1010111101 S'
1T'
b1010010000 T(
b111110111100 T+
1U(
b10111010110 U)
b100000 U*
0V$
1V)
b100000 V*
b1101010001 V,
1W$
0W%
1W*
1X%
0X&
b1110101000 X-
1Y&
0Y'
1Z'
0Z(
1[(
0[)
1\)
b11100000110 \+
b100000 ^*
b1101001000 ^,
b10000 `*
b1000 b*
b11101100101 c$
1d$
b111010111110 d%
b100 d*
b1010010000 d+
1e%
b101010101100 e&
1f&
b1000000000000 f'
b10 f*
b100101000100 f,
1g'
b11100000110 g(
1h(
b100000101111 h)
0i$
1i)
1j$
0j%
1k#
1k%
0k&
1k.
1l&
0l'
b10100000011 l+
1m'
0m(
1n(
0n)
b111111111001 n,
1o)
1o.
b110000 q#
b111 t#
b1001110010 t+
b110111101100 v$
b111010111110 v,
b10000 w#
1w$
b111111111001 w%
b1000 x#
1x%
b11000111101 x&
b100 y#
1y&
b101001101110 y'
b10 z#
1z'
b111110111100 z(
b11011011010 z*
b1 {#
1{(
b11011011010 {)
0|$
1|)
b101001101110 |+
1}$
0}%
1~%
0~&
b100000010001 ~,

#500000
0!
0(
0?!
0k.
0o.

#505000
1!
0!'
0"(
0#)
0$*
b100000 %$
b110001 '
1(
0($
0+$
0,%
0-&
0.'
0/(
00)
01$
01*
02%
03&
04'
05(
06)
07*
0>$
1?!
0?%
0@&
0A'
0B(
0C)
0D$
0D*
0E%
0F&
0G'
0H(
0I)
0J*
0Q$
0R%
0S&
0T'
0U(
0V)
b100000 V*
0W$
0W*
0X%
0Y&
1Y*
0Z'
0[(
0\)
b10000 `*
b1000 b*
0d$
b100 d*
0e%
0f&
b10 f*
0g'
0h(
0i)
0j$
0k#
0k%
1k.
0l&
0m'
0n(
0o)
1o.
b110001 q#
b111 t#
b10000 w#
0w$
b1000 x#
0x%
b100 y#
0y&
b10 z#
0z'
b1 {#
0{(
0|)
0}$
0~%

#510000
0!
0(
0?!
0k.
0o.

#515000
1!
b100000 %$
b110010 '
1(
1?!
0Y*
1Z*
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b110010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#520000
0!
0(
0?!
0k.
0o.

#525000
1!
b100000 %$
b110011 '
1(
1?!
0Z*
1[*
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b110011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#530000
0!
0(
0?!
0k.
0o.

#535000
1!
b100000 %$
b110100 '
1(
1?!
0[*
1\*
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b110100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#540000
0!
0(
0?!
0k.
0o.

#545000
1!
b100000 %$
b110101 '
1(
1?!
b111010000010011100000000000000 X*
0\*
1]*
b10000 `*
b1000 b*
b100 d*
b10 f*
1g*
b111010000010011100000000000000 h*
b1101100 i*
1k.
b111010000010011100000000000000 l#
1m#
1o.
b110101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#550000
0!
0(
0?!
0k.
0o.

#555000
1!
b100000 %$
b110110 '
1(
1?!
0]*
b10000 `*
b1000 b*
b100 d*
b10 f*
0g*
1k.
0m#
1o.
b110110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#560000
0!
0(
0?!
0k.
0o.

#565000
1!
b100000 %$
b110111 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
b1000001101101111100101001001000000000000000 j*
1k.
1o.
b110111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#570000
0!
0(
0?!
0k.
0o.

#575000
1!
b100000 %$
b111000 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
b1111100100100000110101101110 k*
1k.
1o.
b111000 q#
b10000000000000000000000000000000000000000000 s*
b111 t#
b111110010010000011010110111000000000000000 t*
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#580000
0!
0(
0?!
0k.
0o.

#585000
1!
b100000 %$
b111001 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10001101000011000000011110100111011100100 l*
1o.
b111001 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#590000
0!
0(
0?!
0k.
0o.

#595000
1!
b100000 %$
b111010 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b111010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#600000
0!
0(
0?!
0k.
0o.

#605000
1!
b100000 %$
b111011 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b111111111101011111111010111000000000000000 m*
1o.
b111011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#610000
0!
0(
0?!
0k.
0o.

#615000
1!
b100000 %$
b111100 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10000000000101000000001010010 n*
1o.
b111100 q#
b111 t#
b10000000000000000000000000000000000000000000 u*
b1000000000010100000000101001000000000000000 v*
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#620000
0!
0(
0?!
0k.
0o.

#625000
1!
b100000 %$
b111101 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10001101001001100000110101010010111100100 o*
1o.
b111101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#630000
0!
0(
0?!
0k.
0o.

#635000
1!
b100000 %$
b111110 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b111110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#640000
0!
0(
0?!
0k.
0o.

#645000
1!
b100000 %$
b111111 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1000000000000001110000010001100000000000000 p*
b111111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#650000
0!
0(
0?!
0k.
0o.

#655000
1!
b100000 %$
b1000000 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1000000 q#
b1111111111111100011111011101 q*
b111 t#
b10000 w#
b10000000000000000000000000000000000000000000 w*
b1000 x#
b111111111111110001111101110100000000000000 x*
b100 y#
b10 z#
b1 {#

#660000
0!
0(
0?!
0k.
0o.

#665000
1!
b100000 %$
b1000001 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1000001 q#
b10001101001001100001000010111111001110001 r*
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#670000
0!
0(
0?!
0k.
0o.

#675000
1!
b11110001110 !+
1!,
b1000110100101 !-
b11011011010 "+
b101110000000011011100110 ",
b100011100101 "-
1#+
b101110000000 #,
1#-
b101001101110 $,
b100011100101001111110101 $-
b100000 %$
b1000110100101 %+
1%,
b100011100101 %-
b11110001110 &+
b100000010001 &-
b1000010 '
1'+
b1000110100101 ',
1'-
1(
b11110001110010010000010 (+
b1000110100101 (,
b11110001110 )+
1),
b1000110100101 )-
b11011011010 *+
b1000110100101000000000000 *,
b111110100001 *-
1+
1++
b1000110100101 +,
1+-
b1000000000000 ,,
b111110100000111001011100 ,-
b1000110100101 -+
1-,
b111110100001 --
b11110001110 .+
b111000101100 .-
1/+
b1000110100101 /,
1/-
b11110001110010010000010 0+
b1100000101 0,
b11110001110 1+
11,
b1000110100101 1-
b11011011010 2+
b1100000101000011010001 2,
b10100001000 2-
13+
b1100000101 3,
13-
b1010111101 4,
b10100001000000011010000 4-
b1000110100101 5+
15,
b10100001000 5-
b100100000110 6+
b10010010000 6-
17+
b1000110100101 7,
17-
b100100000110010101001011 8+
b1010111011 8,
b100100000110 9+
19,
b1000110100101 9-
b100000101111 :+
b1010111011001010100010 :,
b111101011010 :-
1;+
b1010111011 ;,
1;-
b1001111010 <,
b111101011010010100011100 <-
b1000110100101 =+
1=,
b111101011010 =-
b11001110000 >+
b110111101100 >-
1?!
1?+
b1000110100101 ?,
1?-
b11001101111100011101110 @+
b1010011110 @,
b11001110000 A+
1A,
b1000110100101 A-
b10111010110 B+
b1010011110011111100000 B,
b100000101000 B-
1C+
b1010011110 C,
1C-
b1001100000 D,
b100000100111100100011001 D-
b1000110100101 E+
1E,
b100000101000 E-
b1110000001 F+
b11101100101 F-
1G+
b1000110100101 G,
1G-
b1110000000100100000001 H+
b11011100001 H,
b1110000001 I+
1I,
b1000110100101 I-
b1100101101 J+
b11011100001001001010001 J,
b11101100000 J-
1K+
b11011100001 K,
1K-
b11000111101 L,
b11101011111111101110000 L-
b1000110100101 M+
1M,
b11101100000 M-
b1001111010 N+
b11010110000 N-
1O+
b1000110100101 O,
1O-
b1001111010000110011011 P+
b101111000101 P,
b1001111010 Q+
1Q,
b1000110100101 Q-
b1000111111 R+
b101111000100110011011100 R,
b1111000011 R-
1S+
b101111000101 S,
1S-
b101010101100 T,
b1111000010101110101101 T-
b1000110100101 U+
1U,
b1111000011 U-
b1000101011010 V+
b1101101001 V-
1W+
b1000110100101 W,
1W-
b1000101011010000000101100 X+
b1110101000 X,
b1000101011010 Y+
1Y,
b1000110100101 Y-
b111110111100 Z+
b1110101000010000110101 Z,
b10000001000 Z-
1[+
b1110101000 [,
1[-
b1101010001 \,
b10000001000001101001000 \-
b1000110100101 ]+
1],
b10000001000 ]-
b11110111111 ^+
b1110101000 ^-
1_+
b1000110100101 _,
b100000 _-
b10000 `*
b11110111110110011011110 `+
b1110011110 `,
b11110111111 a+
1a,
b1000 b*
b11100000110 b+
b1110011110010101101000 b,
1c+
b1110011110 c,
b100 d*
b1101001000 d,
b1000110100101 e+
1e,
b10 f*
b1011010011 f+
1g+
b1000110100101 g,
b1011010011011011010000 h+
b101000111000 h,
b1011010011 i+
1i,
b1010010000 j+
b101000110111110011010100 j,
1k+
b101000111000 k,
1k.
b100101000100 l,
b1000110100101 m+
1m,
b1000110100101 n#
b10110000111 n+
1o#
1o+
b1000110100101 o,
1o.
b10110000110110111101111 p+
b1000110011101 p,
b1000010 q#
b10110000111 q+
1q,
b10100000011 r+
b1000110011101010001111101 r,
1s+
b1000110011101 s,
b111 t#
b111111111001 t,
b1000110100101 u+
1u,
b1010110010 v+
b10000 w#
1w+
b1000110100101 w,
b1000 x#
b1010110010010101111010 x+
b1000001000010 x,
b100 y#
1y*
b1010110010 y+
1y,
b10 z#
b1001110010 z+
b1000001000001111001110110 z,
b1 {#
b1000110100101 {*
1{+
b1000001000010 {,
b11110001110 |*
b111010111110 |,
1}*
b1000110100101 }+
1},
b11110001110010010000010 ~*
b101110000000 ~+

#680000
0!
0(
0?!
0k.
0o.

#685000
1!
0!,
b0 "-
0#+
0#-
b100000 %$
0%,
b0 &+
b1000011 '
0'+
0'-
1(
b0 (,
0),
b0 *-
0+
0++
0+-
0-,
b0 .+
0/+
0/-
b0 0,
01,
b0 2-
03+
03-
05,
b0 6+
07+
07-
b0 8,
09,
b0 :-
0;+
0;-
0=,
b0 >+
1?!
0?+
0?-
b0 @,
0A,
b0 B-
0C+
0C-
0E,
b0 F+
0G+
0G-
b0 H,
0I,
b0 J-
0K+
0K-
0M,
b0 N+
0O+
0O-
b0 P,
0Q,
b0 R-
0S+
0S-
0U,
b0 V+
0W+
0W-
b0 X,
0Y,
b0 Z-
0[+
0[-
0],
b0 ^+
0_+
b100000 _-
b10000 `*
b0 `,
0a,
1a-
b1000 b*
0c+
b100 d*
0e,
b10 f*
b0 f+
0g+
b0 h,
0i,
0k+
1k.
0m,
b0 n+
0o#
0o+
1o.
b0 p,
b1000011 q#
0q,
0s+
b111 t#
0u,
b0 v+
b10000 w#
0w+
b1000 x#
b0 x,
b100 y#
0y*
0y,
b10 z#
b1 {#
0{+
b0 |*
0}*
0},
b0 ~+

#690000
0!
0(
0?!
0k.
0o.

#695000
1!
b100000 %$
1&/
b1000100 '
1(
b11110001110 (/
1/
b11110001110 1
1?!
1K.
b11110001110 M.
1M/
b11110001110 O/
b10000 `*
b1 `-
b1000 b*
b100 d*
1d-
b10 f*
b11110001110 f-
1k.
1o.
b1000100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
1y/
b10 z#
b1 {#

#695100
1"0

#700000
0!
0(
0?!
0k.
0o.

#705000
1!
b100000 %$
b1000101 '
b1 '/
1(
b1 0
1?!
b1 L.
b1 N/
b0 Z0
b11110001110 \0
b11110001110 _0
b10000 `*
b10 `-
b0 `0
b1000 b*
b100 d*
b1 e-
b10 f*
1k.
1o.
b1000101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#705100
b1 !0
b11110001110 '0
b11110001110 90
b11110001110 S/

#710000
0!
0(
0?!
0k.
0o.

#715000
1!
b100000 %$
b1000110 '
b10 '/
1(
b10 0
1?!
b10 L.
b10 N/
b1 Z0
b10000 `*
b11 `-
b1 `0
b1000 b*
b100 d*
b10 e-
b10 f*
b1 h0
b1 j0
1k.
1o.
b1000110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#715100
b10 !0
b11110001110 (0
b11110001110 N.
b11110001110 g-

#720000
0!
0(
0?!
0k.
0o.

#725000
1!
b100000 %$
b1000111 '
b11 '/
1(
b100100000110 (/
b11 0
b100100000110 1
1?!
b11 L.
b100100000110 M.
b11 N/
b100100000110 O/
b10 Z0
b10000 `*
b100 `-
b10 `0
b1000 b*
b100 d*
b11 e-
b10 f*
b100100000110 f-
b10 h0
b10 j0
1k.
1o.
b1000111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#725100
b11 !0

#730000
0!
0(
0?!
0k.
0o.

#735000
1!
b100000 %$
b1001000 '
b100 '/
1(
b11001110000 (/
b100 0
b11001110000 1
1?!
b100 L.
b11001110000 M.
b100 N/
b11001110000 O/
b11 Z0
b100100000110 \0
b100100000110 _0
b10000 `*
b101 `-
b11 `0
b1000 b*
b100 d*
b100 e-
b10 f*
b11001110000 f-
b11 h0
b11 j0
1k.
1o.
b1001000 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#735100
b100 !0
b100100000110 '0
b100100000110 90
b100100000110 S/

#740000
0!
0(
0?!
0k.
0o.

#745000
1!
b100000 %$
b1001001 '
b101 '/
1(
b1110000001 (/
b101 0
b1110000001 1
1?!
b101 L.
b1110000001 M.
b101 N/
b1110000001 O/
b100 Z0
b11001110000 \0
b11001110000 _0
b10000 `*
b110 `-
b100 `0
b1000 b*
b100 d*
b101 e-
b10 f*
b1110000001 f-
b100 h0
b100 j0
1k.
1o.
b1001001 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#745100
b101 !0
b11001110000 '0
b100100000110 (0
b11001110000 90
b100100000110 N.
b11001110000 S/
b100100000110 g-

#750000
0!
0(
0?!
0k.
0o.

#755000
1!
b100000 %$
b1001010 '
b110 '/
1(
b1001111010 (/
b110 0
b1001111010 1
1?!
b110 L.
b1001111010 M.
b110 N/
b1001111010 O/
b101 Z0
b1110000001 \0
b1110000001 _0
b10000 `*
b111 `-
b101 `0
b1000 b*
b100 d*
b110 e-
b10 f*
b1001111010 f-
b101 h0
b101 j0
1k.
1o.
b1001010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#755100
b110 !0
b1110000001 '0
b11001110000 (0
b1110000001 90
b11001110000 N.
b1110000001 S/
b11001110000 g-

#760000
0!
0(
0?!
0k.
0o.

#765000
1!
b100000 %$
b1001011 '
b111 '/
1(
b1000101011010 (/
b111 0
b1000101011010 1
1?!
b111 L.
b1000101011010 M.
b111 N/
b1000101011010 O/
b110 Z0
b1001111010 \0
b1001111010 _0
b10000 `*
b1000 `-
b110 `0
b1000 b*
b100 d*
b111 e-
b10 f*
b1000101011010 f-
b110 h0
b110 j0
1k.
1o.
b1001011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#765100
b111 !0
b1001111010 '0
b1110000001 (0
b1001111010 90
b1110000001 N.
b1001111010 S/
b1110000001 g-

#770000
0!
0(
0?!
0k.
0o.

#775000
1!
b100000 %$
b1001100 '
b1000 '/
1(
b11110111111 (/
b1000 0
b11110111111 1
1?!
b1000 L.
b11110111111 M.
b1000 N/
b11110111111 O/
b111 Z0
b1000101011010 \0
b1000101011010 _0
b10000 `*
b1001 `-
b111 `0
b1000 b*
b100 d*
b1000 e-
b10 f*
b11110111111 f-
b111 h0
b111 j0
1k.
1o.
b1001100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#775100
b1000 !0
b1000101011010 '0
b1001111010 (0
b1000101011010 90
b1001111010 N.
b1000101011010 S/
b1001111010 g-

#780000
0!
0(
0?!
0k.
0o.

#785000
1!
b100000 %$
b1001101 '
b1001 '/
1(
b1011010011 (/
b1001 0
b1011010011 1
1?!
b1001 L.
b1011010011 M.
b1001 N/
b1011010011 O/
b1000 Z0
b11110111111 \0
b11110111111 _0
b10000 `*
b1010 `-
b1000 `0
b1000 b*
b100 d*
b1001 e-
b10 f*
b1011010011 f-
b1000 h0
b1000 j0
1k.
1o.
b1001101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#785100
b1001 !0
b11110111111 '0
b1000101011010 (0
b11110111111 90
b1000101011010 N.
b11110111111 S/
b1000101011010 g-

#790000
0!
0(
0?!
0k.
0o.

#795000
1!
b100000 %$
b1001110 '
b1010 '/
1(
b10110000111 (/
b1010 0
b10110000111 1
1?!
b1010 L.
b10110000111 M.
b1010 N/
b10110000111 O/
b1001 Z0
b1011010011 \0
b1011010011 _0
b10000 `*
b1011 `-
b1001 `0
b1000 b*
b100 d*
b1010 e-
b10 f*
b10110000111 f-
b1001 h0
b1001 j0
1k.
1o.
b1001110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#795100
b1010 !0
b1011010011 '0
b11110111111 (0
b1011010011 90
b11110111111 N.
b1011010011 S/
b11110111111 g-

#800000
0!
0(
0?!
0k.
0o.

#805000
1!
b100000 %$
b1001111 '
b1011 '/
1(
b1010110010 (/
b1011 0
b1010110010 1
1?!
b1011 L.
b1010110010 M.
b1011 N/
b1010110010 O/
b1010 Z0
b10110000111 \0
b10110000111 _0
b10000 `*
b1100 `-
b1010 `0
b1000 b*
b100 d*
b1011 e-
b10 f*
b1010110010 f-
b1010 h0
b1010 j0
1k.
1o.
b1001111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#805100
b1011 !0
b10110000111 '0
b1011010011 (0
b10110000111 90
b1011010011 N.
b10110000111 S/
b1011010011 g-

#810000
0!
0(
0?!
0k.
0o.

#815000
1!
b100000 %$
b1010000 '
b1100 '/
1(
b101110000000 (/
b1100 0
b101110000000 1
1?!
b1100 L.
b101110000000 M.
b1100 N/
b101110000000 O/
b1011 Z0
b1010110010 \0
b1010110010 _0
b10000 `*
b1101 `-
b1011 `0
b1000 b*
b100 d*
b1100 e-
b10 f*
b101110000000 f-
b1011 h0
b1011 j0
1k.
1o.
b1010000 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#815100
b1100 !0
b1010110010 '0
b10110000111 (0
b1010110010 90
b10110000111 N.
b1010110010 S/
b10110000111 g-

#820000
0!
0(
0?!
0k.
0o.

#825000
1!
b100000 %$
b1010001 '
b1101 '/
1(
b1000110100101 (/
b1101 0
b1000110100101 1
1?!
b1101 L.
b1000110100101 M.
b1101 N/
b1000110100101 O/
b1100 Z0
b101110000000 \0
b101110000000 _0
b10000 `*
b1110 `-
b1100 `0
b1000 b*
b100 d*
b1101 e-
b10 f*
b1000110100101 f-
b1100 h0
b1100 j0
1k.
1o.
b1010001 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#825100
b1101 !0
b101110000000 '0
b1010110010 (0
b101110000000 90
b1010110010 N.
b101110000000 S/
b1010110010 g-

#830000
0!
0(
0?!
0k.
0o.

#835000
1!
b100000 %$
b1010010 '
b1110 '/
1(
b1100000101 (/
b1110 0
b1100000101 1
1?!
b1110 L.
b1100000101 M.
b1110 N/
b1100000101 O/
b1101 Z0
b1000110100101 \0
b1000110100101 _0
b10000 `*
b1111 `-
b1101 `0
b1000 b*
b100 d*
b1110 e-
b10 f*
b1100000101 f-
b1101 h0
b1101 j0
1k.
1o.
b1010010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#835100
b1110 !0
b1000110100101 '0
b101110000000 (0
b1000110100101 90
b101110000000 N.
b1000110100101 S/
b101110000000 g-

#840000
0!
0(
0?!
0k.
0o.

#845000
1!
b100000 %$
b1010011 '
b1111 '/
1(
b1010111011 (/
b1111 0
b1010111011 1
1?!
b1111 L.
b1010111011 M.
b1111 N/
b1010111011 O/
b1110 Z0
b1100000101 \0
b1100000101 _0
b10000 `*
b10000 `-
b1110 `0
b1000 b*
b100 d*
b1111 e-
b10 f*
b1010111011 f-
b1110 h0
b1110 j0
1k.
1o.
b1010011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#845100
b1111 !0
b1100000101 '0
b1000110100101 (0
b1100000101 90
b1000110100101 N.
b1100000101 S/
b1000110100101 g-

#850000
0!
0(
0?!
0k.
0o.

#855000
1!
b100000 %$
b1010100 '
b10000 '/
1(
b1010011110 (/
b10000 0
b1010011110 1
1?!
b10000 L.
b1010011110 M.
b10000 N/
b1010011110 O/
b1111 Z0
b1010111011 \0
b1010111011 _0
b10000 `*
b10001 `-
b1111 `0
b1000 b*
b100 d*
b10000 e-
b10 f*
b1010011110 f-
b1111 h0
b1111 j0
1k.
1o.
b1010100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#855100
b10000 !0
b1010111011 '0
b1100000101 (0
b1010111011 90
b1100000101 N.
b1010111011 S/
b1100000101 g-

#860000
0!
0(
0?!
0k.
0o.

#865000
1!
b100000 %$
b1010101 '
b10001 '/
1(
b11011100001 (/
b10001 0
b11011100001 1
1?!
b10001 L.
b11011100001 M.
b10001 N/
b11011100001 O/
b10000 Z0
b1010011110 \0
b1010011110 _0
b10000 `*
b10010 `-
b10000 `0
b1000 b*
b100 d*
b10001 e-
b10 f*
b11011100001 f-
b10000 h0
b10000 j0
1k.
1o.
b1010101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#865100
b10001 !0
b1010011110 '0
b1010111011 (0
b1010011110 90
b1010111011 N.
b1010011110 S/
b1010111011 g-

#870000
0!
0(
0?!
0k.
0o.

#875000
1!
b100000 %$
b1010110 '
b10010 '/
1(
b101111000101 (/
b10010 0
b101111000101 1
1?!
b10010 L.
b101111000101 M.
b10010 N/
b101111000101 O/
b10001 Z0
b11011100001 \0
b11011100001 _0
b10000 `*
b10011 `-
b10001 `0
b1000 b*
b100 d*
b10010 e-
b10 f*
b101111000101 f-
b10001 h0
b10001 j0
1k.
1o.
b1010110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#875100
b10010 !0
b11011100001 '0
b1010011110 (0
b11011100001 90
b1010011110 N.
b11011100001 S/
b1010011110 g-

#880000
0!
0(
0?!
0k.
0o.

#885000
1!
b100000 %$
b1010111 '
b10011 '/
1(
b1110101000 (/
b10011 0
b1110101000 1
1?!
b10011 L.
b1110101000 M.
b10011 N/
b1110101000 O/
b10010 Z0
b101111000101 \0
b101111000101 _0
b10000 `*
b10100 `-
b10010 `0
b1000 b*
b100 d*
b10011 e-
b10 f*
b1110101000 f-
b10010 h0
b10010 j0
1k.
1o.
b1010111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#885100
b10011 !0
b101111000101 '0
b11011100001 (0
b101111000101 90
b11011100001 N.
b101111000101 S/
b11011100001 g-

#890000
0!
0(
0?!
0k.
0o.

#895000
1!
b100000 %$
b1011000 '
b10100 '/
1(
b1110011110 (/
b10100 0
b1110011110 1
1?!
b10100 L.
b1110011110 M.
b10100 N/
b1110011110 O/
b10011 Z0
b1110101000 \0
b1110101000 _0
b10000 `*
b10101 `-
b10011 `0
b1000 b*
b100 d*
b10100 e-
b10 f*
b1110011110 f-
b10011 h0
b10011 j0
1k.
1o.
b1011000 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#895100
b10100 !0
b1110101000 '0
b101111000101 (0
b1110101000 90
b101111000101 N.
b1110101000 S/
b101111000101 g-

#900000
0!
0(
0?!
0k.
0o.

#905000
1!
b100000 %$
b1011001 '
b10101 '/
1(
b101000111000 (/
b10101 0
b101000111000 1
1?!
b10101 L.
b101000111000 M.
b10101 N/
b101000111000 O/
b10100 Z0
b1110011110 \0
b1110011110 _0
b10000 `*
b10110 `-
b10100 `0
b1000 b*
b100 d*
b10101 e-
b10 f*
b101000111000 f-
b10100 h0
b10100 j0
1k.
1o.
b1011001 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#905100
b10101 !0
b1110011110 '0
b1110101000 (0
b1110011110 90
b1110101000 N.
b1110011110 S/
b1110101000 g-

#910000
0!
0(
0?!
0k.
0o.

#915000
1!
b100000 %$
b1011010 '
b10110 '/
1(
b1000110011101 (/
b10110 0
b1000110011101 1
1?!
b10110 L.
b1000110011101 M.
b10110 N/
b1000110011101 O/
b10101 Z0
b101000111000 \0
b101000111000 _0
b10000 `*
b10111 `-
b10101 `0
b1000 b*
b100 d*
b10110 e-
b10 f*
b1000110011101 f-
b10101 h0
b10101 j0
1k.
1o.
b1011010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#915100
b10110 !0
b101000111000 '0
b1110011110 (0
b101000111000 90
b1110011110 N.
b101000111000 S/
b1110011110 g-

#920000
0!
0(
0?!
0k.
0o.

#925000
1!
b100000 %$
b1011011 '
b10111 '/
1(
b1000001000010 (/
b10111 0
b1000001000010 1
1?!
b10111 L.
b1000001000010 M.
b10111 N/
b1000001000010 O/
b10110 Z0
b1000110011101 \0
b1000110011101 _0
b10000 `*
b11000 `-
b10110 `0
b1000 b*
b100 d*
b10111 e-
b10 f*
b1000001000010 f-
b10110 h0
b10110 j0
1k.
1o.
b1011011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#925100
b10111 !0
b1000110011101 '0
b101000111000 (0
b1000110011101 90
b101000111000 N.
b1000110011101 S/
b101000111000 g-

#930000
0!
0(
0?!
0k.
0o.

#935000
1!
b100000 %$
b1011100 '
b11000 '/
1(
b100011100101 (/
b11000 0
b100011100101 1
1?!
b11000 L.
b100011100101 M.
b11000 N/
b100011100101 O/
b10111 Z0
b1000001000010 \0
b1000001000010 _0
b10000 `*
b11001 `-
b10111 `0
b1000 b*
b100 d*
b11000 e-
b10 f*
b100011100101 f-
b10111 h0
b10111 j0
1k.
1o.
b1011100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#935100
b11000 !0
b1000001000010 '0
b1000110011101 (0
b1000001000010 90
b1000110011101 N.
b1000001000010 S/
b1000110011101 g-

#940000
0!
0(
0?!
0k.
0o.

#945000
1!
b100000 %$
b1011101 '
b11001 '/
1(
b111110100001 (/
b11001 0
b111110100001 1
1?!
b11001 L.
b111110100001 M.
b11001 N/
b111110100001 O/
b11000 Z0
b100011100101 \0
b100011100101 _0
b10000 `*
b11010 `-
b11000 `0
b1000 b*
b100 d*
b11001 e-
b10 f*
b111110100001 f-
b11000 h0
b11000 j0
1k.
1o.
b1011101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#945100
b11001 !0
b100011100101 '0
b1000001000010 (0
b100011100101 90
b1000001000010 N.
b100011100101 S/
b1000001000010 g-

#950000
0!
0(
0?!
0k.
0o.

#955000
1!
b100000 %$
b1011110 '
b11010 '/
1(
b10100001000 (/
b11010 0
b10100001000 1
1?!
b11010 L.
b10100001000 M.
b11010 N/
b10100001000 O/
b11001 Z0
b111110100001 \0
b111110100001 _0
b10000 `*
b11011 `-
b11001 `0
b1000 b*
b100 d*
b11010 e-
b10 f*
b10100001000 f-
b11001 h0
b11001 j0
1k.
1o.
b1011110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#955100
b11010 !0
b111110100001 '0
b100011100101 (0
b111110100001 90
b100011100101 N.
b111110100001 S/
b100011100101 g-

#960000
0!
0(
0?!
0k.
0o.

#965000
1!
b100000 %$
b1011111 '
b11011 '/
1(
b111101011010 (/
b11011 0
b111101011010 1
1?!
b11011 L.
b111101011010 M.
b11011 N/
b111101011010 O/
b11010 Z0
b10100001000 \0
b10100001000 _0
b10000 `*
b11100 `-
b11010 `0
b1000 b*
b100 d*
b11011 e-
b10 f*
b111101011010 f-
b11010 h0
b11010 j0
1k.
1o.
b1011111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#965100
b11011 !0
b10100001000 '0
b111110100001 (0
b10100001000 90
b111110100001 N.
b10100001000 S/
b111110100001 g-

#970000
0!
0(
0?!
0k.
0o.

#975000
1!
b100000 %$
b1100000 '
b11100 '/
1(
b100000101000 (/
b11100 0
b100000101000 1
1?!
b11100 L.
b100000101000 M.
b11100 N/
b100000101000 O/
b11011 Z0
b111101011010 \0
b111101011010 _0
b10000 `*
b11101 `-
b11011 `0
b1000 b*
b100 d*
b11100 e-
b10 f*
b100000101000 f-
b11011 h0
b11011 j0
1k.
1o.
b1100000 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#975100
b11100 !0
b111101011010 '0
b10100001000 (0
b111101011010 90
b10100001000 N.
b111101011010 S/
b10100001000 g-

#980000
0!
0(
0?!
0k.
0o.

#985000
1!
b100000 %$
b1100001 '
b11101 '/
1(
b11101100000 (/
b11101 0
b11101100000 1
1?!
b11101 L.
b11101100000 M.
b11101 N/
b11101100000 O/
b11100 Z0
b100000101000 \0
b100000101000 _0
b10000 `*
b11110 `-
b11100 `0
b1000 b*
b100 d*
b11101 e-
b10 f*
b11101100000 f-
b11100 h0
b11100 j0
1k.
1o.
b1100001 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#985100
b11101 !0
b100000101000 '0
b111101011010 (0
b100000101000 90
b111101011010 N.
b100000101000 S/
b111101011010 g-

#990000
0!
0(
0?!
0k.
0o.

#995000
1!
b100000 %$
b1100010 '
b11110 '/
1(
b1111000011 (/
b11110 0
b1111000011 1
1?!
b11110 L.
b1111000011 M.
b11110 N/
b1111000011 O/
b11101 Z0
b11101100000 \0
b11101100000 _0
b10000 `*
b11111 `-
b11101 `0
b1000 b*
b100 d*
b11110 e-
b10 f*
b1111000011 f-
b11101 h0
b11101 j0
1k.
1o.
b1100010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#995100
b11110 !0
b11101100000 '0
b100000101000 (0
b11101100000 90
b100000101000 N.
b11101100000 S/
b100000101000 g-

#1000000
0!
0(
0?!
0k.
0o.

#1005000
1!
1$
b100000 %$
b1100011 '
b11111 '/
1(
b10000001000 (/
b11111 0
b10000001000 1
12
1?!
1C/
1K0
b11111 L.
1L0
b10000001000 M.
b11111 N/
b10000001000 O/
b11110 Z0
b1111000011 \0
b1111000011 _0
b10000 `*
b11110 `0
0a-
b1000 b*
b100 d*
b11111 e-
b10 f*
b10000001000 f-
1h-
b11110 h0
b11110 j0
1k.
1o.
b1100011 q#
1q.
b111 t#
1v/
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#
1|/

#1005100
b11111 !0
1&0
b1111000011 '0
b11101100000 (0
b1111000011 90
b11101100000 N.
b1111000011 S/
b11101100000 g-

#1010000
0!
0(
0?!
0k.
0o.

#1015000
1!
0!1
0"1
b11111 #1
b0 $1
b100000 %$
b11111 %1
0&/
b0 &1
b1100100 '
b11111 '1
1(
b0 (1
b11111 )1
b0 *1
0/
1?!
0K.
0M/
b11111 Z0
b10000001000 \0
b10000001000 _0
b10000 `*
b11111 `0
b1000 b*
b100 d*
0d-
b10 f*
b11111 h0
b11111 j0
1k.
b0 l0
0m0
b0 n0
1o.
b1100100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
0y/
b0 y0
b10 z#
b11111 z0
b1 {#
b1 {0
b0 |0
b0 }0
0~0

#1015100
0"0
b10000001000 '0
b1111000011 (0
b10000001000 90
b11110001110 =0
b1111000011 N.
b11110001110 N0
b10000001000 S/
b11110001110 T/
b1111000011 g-

#1020000
0!
0(
0?!
0k.
0o.

#1025000
1!
b100000 %$
b1100101 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1100101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1025100
b11110001110 &
b10000001000 (0
b11110001110 -
b11110001110 >0
b10000001000 N.
b11110001110 R.
b11110001110 R0
b11110001110 Y/
b10000001000 g-
b11110001110 k-

#1030000
0!
0(
0?!
0k.
0o.

#1035000
1!
b100000 %$
b1100110 '
1(
1?!
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1100110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1040000
0!
0(
0?!
0k.
0o.

#1045000
1!
b1 %
b100000 %$
b1100111 '
1(
b1 ,
r0.029510498046875 21
r0.029510498046875 31
1?!
b1 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
1o.
b1100111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1045100
b1 $0

#1050000
0!
0(
0?!
0k.
0o.

#1055000
1!
b10 %
b100000 %$
b1101000 '
1(
b10 ,
r0.05902099609375 21
b1 41
1?!
b10 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b1 l0
b1 n0
1o.
b1101000 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1055100
b10 $0

#1060000
0!
0(
0?!
0k.
0o.

#1065000
1!
b11 %
b100000 %$
b1101001 '
1(
b11 ,
r0.088531494140625 21
b10 41
1?!
b11 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10 l0
b10 n0
1o.
b1101001 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1065100
b11 $0

#1070000
0!
0(
0?!
0k.
0o.

#1075000
1!
b100 %
b100000 %$
b1101010 '
1(
b100 ,
r0.1180419921875 21
b11 41
1?!
b100 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b11 l0
b11 n0
1o.
b1101010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1075100
b100 $0
b100100000110 =0
b100100000110 N0
b100100000110 T/

#1080000
0!
0(
0?!
0k.
0o.

#1085000
1!
b101 %
b100000 %$
b1101011 '
1(
b101 ,
r0.147552490234375 21
b100 41
1?!
b101 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b100 l0
b100 n0
1o.
b1101011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1085100
b101 $0
b100100000110 &
b100100000110 -
b11001110000 =0
b100100000110 >0
b11001110000 N0
b100100000110 R.
b100100000110 R0
b11001110000 T/
b100100000110 Y/
b100100000110 k-

#1090000
0!
0(
0?!
0k.
0o.

#1095000
1!
b110 %
b100000 %$
b1101100 '
1(
b110 ,
r0.18280029296875 21
r0.035247802734375 31
b101 41
1?!
b110 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b101 l0
b101 n0
1o.
b1101100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1095100
b110 $0
b11001110000 &
b11001110000 -
b1110000001 =0
b11001110000 >0
b1110000001 N0
b11001110000 R.
b11001110000 R0
b1110000001 T/
b11001110000 Y/
b11001110000 k-

#1100000
0!
0(
0?!
0k.
0o.

#1105000
1!
b111 %
b100000 %$
b1101101 '
1(
b111 ,
r0.20794677734375 21
r0.025146484375 31
b110 41
1?!
b111 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b110 l0
b110 n0
1o.
b1101101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1105100
b111 $0
b1110000001 &
b1110000001 -
b1001111010 =0
b1110000001 >0
b1001111010 N0
b1110000001 R.
b1110000001 R0
b1001111010 T/
b1110000001 Y/
b1110000001 k-

#1110000
0!
0(
0?!
0k.
0o.

#1115000
1!
b1000 %
b100000 %$
b1101110 '
1(
b1000 ,
r0.2216339111328125 21
r0.0136871337890625 31
b111 41
1?!
b1000 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b111 l0
b111 n0
1o.
b1101110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1115100
b1000 $0
b1001111010 &
b1001111010 -
b1000101011010 =0
b1001111010 >0
b1000101011010 N0
b1001111010 R.
b1001111010 R0
b1000101011010 T/
b1001111010 Y/
b1001111010 k-

#1120000
0!
0(
0?!
0k.
0o.

#1125000
1!
b1001 %
b100000 %$
b1101111 '
1(
b1001 ,
r0.2313079833984375 21
r0.009674072265625 31
b1000 41
1?!
b1001 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b1000 l0
b1000 n0
1o.
b1101111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1125100
b1001 $0
b1000101011010 &
b1000101011010 -
b11110111111 =0
b1000101011010 >0
b11110111111 N0
b1000101011010 R.
b1000101011010 R0
b11110111111 T/
b1000101011010 Y/
b1000101011010 k-

#1130000
0!
0(
0?!
0k.
0o.

#1135000
1!
b1010 %
b100000 %$
b1110000 '
1(
b1010 ,
r0.2990875244140625 21
r0.067779541015625 31
b1001 41
1?!
b1010 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b1001 l0
b1001 n0
1o.
b1110000 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1135100
b1010 $0
b11110111111 &
b11110111111 -
b1011010011 =0
b11110111111 >0
b1011010011 N0
b11110111111 R.
b11110111111 R0
b1011010011 T/
b11110111111 Y/
b11110111111 k-

#1140000
0!
0(
0?!
0k.
0o.

#1145000
1!
b1011 %
b100000 %$
b1110001 '
1(
b1011 ,
r0.329345703125 21
r0.0302581787109375 31
b1010 41
1?!
b1011 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b1010 l0
b1010 n0
1o.
b1110001 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1145100
b1011 $0
b1011010011 &
b1011010011 -
b10110000111 =0
b1011010011 >0
b10110000111 N0
b1011010011 R.
b1011010011 R0
b10110000111 T/
b1011010011 Y/
b1011010011 k-

#1150000
0!
0(
0?!
0k.
0o.

#1155000
1!
b1100 %
b100000 %$
b1110010 '
1(
b1100 ,
r0.3403778076171875 21
r0.0110321044921875 31
b1011 41
1?!
b1100 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b1011 l0
b1011 n0
1o.
b1110010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1155100
b1100 $0
b10110000111 &
b10110000111 -
b1010110010 =0
b10110000111 >0
b1010110010 N0
b10110000111 R.
b10110000111 R0
b1010110010 T/
b10110000111 Y/
b10110000111 k-

#1160000
0!
0(
0?!
0k.
0o.

#1165000
1!
b1101 %
b100000 %$
b1110011 '
1(
b1101 ,
r0.361968994140625 21
r0.0215911865234375 31
b1100 41
1?!
b1101 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b1100 l0
b1100 n0
1o.
b1110011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1165100
b1101 $0
b1010110010 &
b1010110010 -
b101110000000 =0
b1010110010 >0
b101110000000 N0
b1010110010 R.
b1010110010 R0
b101110000000 T/
b1010110010 Y/
b1010110010 k-

#1170000
0!
0(
0?!
0k.
0o.

#1175000
1!
b1110 %
b100000 %$
b1110100 '
1(
b1110 ,
r0.37249755859375 21
r0.010528564453125 31
b1101 41
1?!
b1110 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b1101 l0
b1101 n0
1o.
b1110100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1175100
b1110 $0
b101110000000 &
b101110000000 -
b1000110100101 =0
b101110000000 >0
b1000110100101 N0
b101110000000 R.
b101110000000 R0
b1000110100101 T/
b101110000000 Y/
b101110000000 k-

#1180000
0!
0(
0?!
0k.
0o.

#1185000
1!
b1111 %
b100000 %$
b1110101 '
1(
b1111 ,
r0.41741943359375 21
r0.044921875 31
b1110 41
1?!
b1111 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b1110 l0
b1110 n0
1o.
b1110101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1185100
b1111 $0
b1000110100101 &
b1000110100101 -
b1100000101 =0
b1000110100101 >0
b1100000101 N0
b1000110100101 R.
b1000110100101 R0
b1100000101 T/
b1000110100101 Y/
b1000110100101 k-

#1190000
0!
0(
0?!
0k.
0o.

#1195000
1!
b10000 %
b100000 %$
b1110110 '
1(
b10000 ,
r0.4863433837890625 21
r0.0689239501953125 31
b1111 41
1?!
b10000 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b1111 l0
b1111 n0
1o.
b1110110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1195100
b10000 $0
b1100000101 &
b1100000101 -
b1010111011 =0
b1100000101 >0
b1010111011 N0
b1100000101 R.
b1100000101 R0
b1010111011 T/
b1100000101 Y/
b1100000101 k-

#1200000
0!
0(
0?!
0k.
0o.

#1205000
1!
b10001 %
b100000 %$
b1110111 '
1(
b10001 ,
r0.498138427734375 21
r0.0117950439453125 31
b10000 41
1?!
b10001 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10000 l0
b10000 n0
1o.
b1110111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1205100
b10001 $0
b1010111011 &
b1010111011 -
b1010011110 =0
b1010111011 >0
b1010011110 N0
b1010111011 R.
b1010111011 R0
b1010011110 T/
b1010111011 Y/
b1010111011 k-

#1210000
0!
0(
0?!
0k.
0o.

#1215000
1!
b10010 %
b100000 %$
b1111000 '
1(
b10010 ,
r0.5088043212890625 21
r0.0106658935546875 31
b10001 41
1?!
b10010 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10001 l0
b10001 n0
1o.
b1111000 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1215100
b10010 $0
b1010011110 &
b1010011110 -
b11011100001 =0
b1010011110 >0
b11011100001 N0
b1010011110 R.
b1010011110 R0
b11011100001 T/
b1010011110 Y/
b1010011110 k-

#1220000
0!
0(
0?!
0k.
0o.

#1225000
1!
b10011 %
b100000 %$
b1111001 '
1(
b10011 ,
r0.5190277099609375 21
r0.010223388671875 31
b10010 41
1?!
b10011 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10010 l0
b10010 n0
1o.
b1111001 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1225100
b10011 $0
b11011100001 &
b11011100001 -
b101111000101 =0
b11011100001 >0
b101111000101 N0
b11011100001 R.
b11011100001 R0
b101111000101 T/
b11011100001 Y/
b11011100001 k-

#1230000
0!
0(
0?!
0k.
0o.

#1235000
1!
b10100 %
b100000 %$
b1111010 '
1(
b10100 ,
r0.5458984375 21
r0.0268707275390625 31
b10011 41
1?!
b10100 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10011 l0
b10011 n0
1o.
b1111010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1235100
b10100 $0
b101111000101 &
b101111000101 -
b1110101000 =0
b101111000101 >0
b1110101000 N0
b101111000101 R.
b101111000101 R0
b1110101000 T/
b101111000101 Y/
b101111000101 k-

#1240000
0!
0(
0?!
0k.
0o.

#1245000
1!
b10101 %
b100000 %$
b1111011 '
1(
b10101 ,
r0.5918731689453125 21
r0.0459747314453125 31
b10100 41
1?!
b10101 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10100 l0
b10100 n0
1o.
b1111011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1245100
b10101 $0
b1110101000 &
b1110101000 -
b1110011110 =0
b1110101000 >0
b1110011110 N0
b1110101000 R.
b1110101000 R0
b1110011110 T/
b1110101000 Y/
b1110101000 k-

#1250000
0!
0(
0?!
0k.
0o.

#1255000
1!
b10110 %
b100000 %$
b1111100 '
1(
b10110 ,
r0.6061553955078125 21
r0.0142822265625 31
b10101 41
1?!
b10110 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10101 l0
b10101 n0
1o.
b1111100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1255100
b10110 $0
b1110011110 &
b1110011110 -
b101000111000 =0
b1110011110 >0
b101000111000 N0
b1110011110 R.
b1110011110 R0
b101000111000 T/
b1110011110 Y/
b1110011110 k-

#1260000
0!
0(
0?!
0k.
0o.

#1265000
1!
b10111 %
b100000 %$
b1111101 '
1(
b10111 ,
r0.6202850341796875 21
r0.014129638671875 31
b10110 41
1?!
b10111 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10110 l0
b10110 n0
1o.
b1111101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1265100
b10111 $0
b101000111000 &
b101000111000 -
b1000110011101 =0
b101000111000 >0
b1000110011101 N0
b101000111000 R.
b101000111000 R0
b1000110011101 T/
b101000111000 Y/
b101000111000 k-

#1270000
0!
0(
0?!
0k.
0o.

#1275000
1!
b11000 %
b100000 %$
b1111110 '
1(
b11000 ,
r0.6602020263671875 21
r0.0399169921875 31
b10111 41
1?!
b11000 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10111 l0
b10111 n0
1o.
b1111110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1275100
b11000 $0
b1000110011101 &
b1000110011101 -
b1000001000010 =0
b1000110011101 >0
b1000001000010 N0
b1000110011101 R.
b1000110011101 R0
b1000001000010 T/
b1000110011101 Y/
b1000110011101 k-

#1280000
0!
0(
0?!
0k.
0o.

#1285000
1!
b11001 %
b100000 %$
b1111111 '
1(
b11001 ,
r0.72900390625 21
r0.0688018798828125 31
b11000 41
1?!
b11001 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b11000 l0
b11000 n0
1o.
b1111111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1285100
b11001 $0
b1000001000010 &
b1000001000010 -
b100011100101 =0
b1000001000010 >0
b100011100101 N0
b1000001000010 R.
b1000001000010 R0
b100011100101 T/
b1000001000010 Y/
b1000001000010 k-

#1290000
0!
0(
0?!
0k.
0o.

#1295000
1!
b11010 %
b100000 %$
b10000000 '
1(
b11010 ,
r0.792510986328125 21
r0.063507080078125 31
b11001 41
1?!
b11010 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b11001 l0
b11001 n0
1o.
b10000000 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1295100
b11010 $0
b100011100101 &
b100011100101 -
b111110100001 =0
b100011100101 >0
b111110100001 N0
b100011100101 R.
b100011100101 R0
b111110100001 T/
b100011100101 Y/
b100011100101 k-

#1300000
0!
0(
0?!
0k.
0o.

#1305000
1!
b11011 %
b100000 %$
b10000001 '
1(
b11011 ,
r0.8272552490234375 21
r0.0347442626953125 31
b11010 41
1?!
b11011 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b11010 l0
b11010 n0
1o.
b10000001 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1305100
b11011 $0
b111110100001 &
b111110100001 -
b10100001000 =0
b111110100001 >0
b10100001000 N0
b111110100001 R.
b111110100001 R0
b10100001000 T/
b111110100001 Y/
b111110100001 k-

#1310000
0!
0(
0?!
0k.
0o.

#1315000
1!
b11100 %
b100000 %$
b10000010 '
1(
b11100 ,
r0.8883056640625 21
r0.0610504150390625 31
b11011 41
1?!
b11100 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b11011 l0
b11011 n0
1o.
b10000010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1315100
b11100 $0
b10100001000 &
b10100001000 -
b111101011010 =0
b10100001000 >0
b111101011010 N0
b10100001000 R.
b10100001000 R0
b111101011010 T/
b10100001000 Y/
b10100001000 k-

#1320000
0!
0(
0?!
0k.
0o.

#1325000
1!
b11101 %
b100000 %$
b10000011 '
1(
b11101 ,
r0.907958984375 21
r0.0196533203125 31
b11100 41
1?!
b11101 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b11100 l0
b11100 n0
1o.
b10000011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1325100
b11101 $0
b111101011010 &
b111101011010 -
b100000101000 =0
b111101011010 >0
b100000101000 N0
b111101011010 R.
b111101011010 R0
b100000101000 T/
b111101011010 Y/
b111101011010 k-

#1330000
0!
0(
0?!
0k.
0o.

#1335000
1!
b11110 %
b100000 %$
b10000100 '
1(
b11110 ,
r0.967926025390625 21
r0.059967041015625 31
b11101 41
1?!
b11110 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b11101 l0
b11101 n0
1o.
b10000100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1335100
b11110 $0
b100000101000 &
b100000101000 -
b11101100000 =0
b100000101000 >0
b11101100000 N0
b100000101000 R.
b100000101000 R0
b11101100000 T/
b100000101000 Y/
b100000101000 k-

#1340000
0!
0(
0?!
0k.
0o.

#1345000
1!
b11111 %
b100000 %$
b10000101 '
1(
b11111 ,
r0.999786376953125 21
r0.0318603515625 31
b11110 41
1?!
b11111 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b11110 l0
b11110 n0
1o.
b10000101 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1345100
b11111 $0
b11101100000 &
b11101100000 -
b1111000011 =0
b11101100000 >0
b1111000011 N0
b11101100000 R.
b11101100000 R0
b1111000011 T/
b11101100000 Y/
b11101100000 k-

#1350000
0!
0(
0?!
0k.
0o.

#1355000
1!
b0 %
b100000 %$
b10000110 '
1(
b0 ,
r1.028594970703125 21
r0.02880859375 31
b11111 41
1?!
b0 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b11111 l0
b11111 n0
1o.
b10000110 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1355100
b0 $0
b1111000011 &
b1111000011 -
b10000001000 =0
b1111000011 >0
b10000001000 N0
b1111000011 R.
b1111000011 R0
b10000001000 T/
b1111000011 Y/
b1111000011 k-

#1360000
0!
0(
0?!
0k.
0o.

#1365000
1!
b1 %
b100000 %$
b10000111 '
1(
b1 ,
r1.043289184570312 21
r0.0146942138671875 31
b100000 41
1?!
b1 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b0 l0
b0 n0
1o.
b10000111 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1365100
b1 $0
b10000001000 &
b10000001000 -
b11110001110 =0
b10000001000 >0
b11110001110 N0
b10000001000 R.
b10000001000 R0
b11110001110 T/
b10000001000 Y/
b10000001000 k-

#1370000
0!
0(
0?!
0k.
0o.

#1375000
1!
b10 %
b100000 %$
b10001000 '
1(
b10 ,
r1.059036254882812 21
r0.0157470703125 31
b100001 41
1?!
b10 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b1 l0
b1 n0
1o.
b10001000 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1375100
b10 $0
b11110001110 &
b11110001110 -
b11110001110 >0
b11110001110 R.
b11110001110 R0
b11110001110 Y/
b11110001110 k-

#1380000
0!
0(
0?!
0k.
0o.

#1385000
1!
b11 %
b100000 %$
b10001001 '
1(
b11 ,
r1.088546752929688 21
r0.029510498046875 31
b100010 41
1?!
b11 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b10 l0
b10 n0
1o.
b10001001 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1385100
b11 $0

#1390000
0!
0(
0?!
0k.
0o.

#1395000
1!
b100 %
b100000 %$
b10001010 '
1(
b100 ,
r1.118057250976562 21
b100011 41
1?!
b100 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b11 l0
b11 n0
1o.
b10001010 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1395100
b100 $0
b100100000110 =0
b100100000110 N0
b100100000110 T/

#1400000
0!
0(
0?!
0k.
0o.

#1405000
1!
b101 %
b100000 %$
b10001011 '
1(
b101 ,
r1.147567749023438 21
b100100 41
1?!
b101 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b100 l0
b100 n0
1o.
b10001011 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1405100
b101 $0
b100100000110 &
b100100000110 -
b11001110000 =0
b100100000110 >0
b11001110000 N0
b100100000110 R.
b100100000110 R0
b11001110000 T/
b100100000110 Y/
b100100000110 k-

#1410000
0!
0(
0?!
0k.
0o.

#1415000
1!
b110 %
b100000 %$
b10001100 '
1(
b110 ,
r1.182815551757812 21
r0.035247802734375 31
b100101 41
1?!
b110 P.
b10000 `*
b1000 b*
b100 d*
b10 f*
1k.
b101 l0
b101 n0
1o.
b10001100 q#
b111 t#
b10000 w#
b1000 x#
b100 y#
b10 z#
b1 {#

#1415100
b110 $0
b11001110000 &
b11001110000 -
b1110000001 =0
b11001110000 >0
b1110000001 N0
b11001110000 R.
b11001110000 R0
b1110000001 T/
b11001110000 Y/
b11001110000 k-

#1420000
0!
0(
0?!
0k.
0o.

#1425000
1!
1(
b100110 41
1?!
1k.
1o.
